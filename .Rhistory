#innov <- rnorm(n, mu, sqrt(object$sigma2))
#ts <- simulate(object, nsim = n, future = FALSE, innov = innov, xreg = xreg)
ts[which(ts < lowerbound)] <- lowerbound
ts
}
rarmaAlt(walker_METHADONE_model3, 100, xreg = walker_METHADONE_model3$xreg)
debug(rarmaAlt)
rarmaAlt(walker_METHADONE_model3, 100, xreg = walker_METHADONE_model3$xreg)
?simulate
library(forecast)
rarmaAlt <- function(object, n,
h1 = NULL, h2 = NULL, h3 = NULL,
delta1 = 0, delta2 = 0, delta3 = 0,
xreg = NULL, burnin = 50, lowerbound = 0, const = 0.5) {
##order <- c(0, 0, 0)
##
##nar <- sum(object$model$phi != 0)
##nma <- sum(object$model$theta != 0)
##
##if (nar > 0) {
##  order[1] <- nar
##  phi.vec <- object$model$phi[which(object$model$phi != 0)]
##} else {
##  phi.vec <- NULL
##}
##
##if (nma > 0) {
##  order[3] <- nma
##  theta.vec <- object$model$theta[which(object$model$theta != 0)]
##} else {
##  theta.vec <- NULL
##}
##
##ss <- sigma.mat(100, order = order, phi.vec = phi.vec, theta.vec = theta.vec, sigma2 = object$sigma2,
##                burn.in = burnin)
#sim <- matrix(NA, nrow = n, ncol = nsim)
#for (i in 1:nsim) {
#  sim[, i] <- simulate(object, nsim = n, future = FALSE, xreg = xreg)
#}
fi <- object$fitted
va <- mean((object$x[1:n] - fi[1:n]) ^ 2)
n1 <- length(h1)
n2 <- length(h2)
n3 <- length(h3)
mu <- rep(0, n)
if (n1 > 0) {
for (i in 1:n1) {
mu[h1[i]] <- mu[h1[i]] + sqrt(va) * delta1
}
}
if (n2 > 0) {
for (i in 1:n2) {
mu[h2[i]:n] <- mu[h2[i]:n] + sqrt(va) * delta2
}
}
if (n3 > 0) {
for (i in 1:n3) {
mu[h3[i]:n] <- mu[h3[i]:n] + sqrt(va) * delta3 * (h3[i]:n - h3[i] + 1)
}
}
#ts <- simulate(object, nsim = n, future = FALSE, xreg = xreg)
#tmpsel <- sample(1:nsim, 1)
ts <- simulate(object, nsim = n, future = FALSE, xreg = xreg) - const + mu
#innov <- rnorm(n, mu, sqrt(object$sigma2))
#ts <- simulate(object, nsim = n, future = FALSE, innov = innov, xreg = xreg)
ts[which(ts < lowerbound)] <- lowerbound
ts
}
library(forecast)
rarmaAlt(walker_METHADONE_model3, 100, xreg = walker_METHADONE_model3$xreg)
debug(rarmaAlt)
rarmaAlt(walker_METHADONE_model3, 100, xreg = walker_METHADONE_model3$xreg)
simulate(object, nsim = n, future = FALSE, xreg = xreg)
object$fitted
simulate(object, nsim = n, future = FALSE, xreg = xreg)
?forecast::simulate.Arima
simulate(object, nsim = n, future = FALSE, xreg = xreg[1:n, ])
rarmaAlt <- function(object, n,
h1 = NULL, h2 = NULL, h3 = NULL,
delta1 = 0, delta2 = 0, delta3 = 0,
xreg = NULL, burnin = 50, lowerbound = 0, const = 0.5) {
##order <- c(0, 0, 0)
##
##nar <- sum(object$model$phi != 0)
##nma <- sum(object$model$theta != 0)
##
##if (nar > 0) {
##  order[1] <- nar
##  phi.vec <- object$model$phi[which(object$model$phi != 0)]
##} else {
##  phi.vec <- NULL
##}
##
##if (nma > 0) {
##  order[3] <- nma
##  theta.vec <- object$model$theta[which(object$model$theta != 0)]
##} else {
##  theta.vec <- NULL
##}
##
##ss <- sigma.mat(100, order = order, phi.vec = phi.vec, theta.vec = theta.vec, sigma2 = object$sigma2,
##                burn.in = burnin)
#sim <- matrix(NA, nrow = n, ncol = nsim)
#for (i in 1:nsim) {
#  sim[, i] <- simulate(object, nsim = n, future = FALSE, xreg = xreg)
#}
fi <- object$fitted
va <- mean((object$x[1:n] - fi[1:n]) ^ 2)
n1 <- length(h1)
n2 <- length(h2)
n3 <- length(h3)
mu <- rep(0, n)
if (n1 > 0) {
for (i in 1:n1) {
mu[h1[i]] <- mu[h1[i]] + sqrt(va) * delta1
}
}
if (n2 > 0) {
for (i in 1:n2) {
mu[h2[i]:n] <- mu[h2[i]:n] + sqrt(va) * delta2
}
}
if (n3 > 0) {
for (i in 1:n3) {
mu[h3[i]:n] <- mu[h3[i]:n] + sqrt(va) * delta3 * (h3[i]:n - h3[i] + 1)
}
}
#ts <- simulate(object, nsim = n, future = FALSE, xreg = xreg)
#tmpsel <- sample(1:nsim, 1)
ts <- simulate(object, nsim = n, future = FALSE, xreg = xreg[1:n, ]) - const + mu
#innov <- rnorm(n, mu, sqrt(object$sigma2))
#ts <- simulate(object, nsim = n, future = FALSE, innov = innov, xreg = xreg)
ts[which(ts < lowerbound)] <- lowerbound
ts
}
rarmaAlt(walker_METHADONE_model3, 100, xreg = walker_METHADONE_model3$xreg)
rarmaAlt(walker_METHADONE_model3, 100, xreg = walker_METHADONE_model3$xreg, h1 = 50, delta1 = 10)
plot(rarmaAlt(walker_METHADONE_model3, 100, xreg = walker_METHADONE_model3$xreg, h1 = 50, delta1 = 10))
plot(rarmaAlt(walker_METHADONE_model3, 100, xreg = walker_METHADONE_model3$xreg, h1 = 50, delta1 = 100))
plot(rarmaAlt(walker_METHADONE_model3, 100, xreg = walker_METHADONE_model3$xreg, h1 = c(50, 70), delta1 = 100))
plot(rarmaAlt(walker_METHADONE_model3, 100, xreg = walker_METHADONE_model3$xreg, h2 = c(50, 70), delta2 = 100))
plot(rarmaAlt(walker_METHADONE_model3, 100, xreg = walker_METHADONE_model3$xreg, h3 = c(50, 70), delta3 = 100))
plot(rarmaAlt(walker_METHADONE_model3, 100, xreg = walker_METHADONE_model3$xreg, h1 = c(50, 70), delta1 = 100), h2 = c(30, 60), delta2 = 100)
plot(rarmaAlt(walker_METHADONE_model3, 100, xreg = walker_METHADONE_model3$xreg, h1 = c(50, 70), delta1 = 100, h2 = c(30, 60), delta2 = 100))
warnings()
plot(rarmaAlt(walker_METHADONE_model3, 100, xreg = walker_METHADONE_model3$xreg, h1 = c(50, 70), delta1 = 100, h2 = c(30, 60), delta2 = 100))
plot(rarmaAlt(walker_METHADONE_model3, 100, xreg = walker_METHADONE_model3$xreg, h1 = c(50, 70), delta1 = 100, h2 = c(30, 60), delta2 = 100))
plot(rarmaAlt(walker_METHADONE_model3, 100, xreg = walker_METHADONE_model3$xreg, h1 = c(50, 70), delta1 = 1, h2 = c(30, 60), delta2 = 1))
plot(rarmaAlt(walker_METHADONE_model3, 100, xreg = walker_METHADONE_model3$xreg, h1 = c(50, 70), delta1 = 1, h2 = c(30, 60), delta2 = 1))
plot(rarmaAlt(walker_METHADONE_model3, 100, xreg = walker_METHADONE_model3$xreg, h1 = c(50, 70), delta1 = 1, h2 = c(30, 60), delta2 = 1))
plot(rarmaAlt(walker_METHADONE_model3, 100, xreg = walker_METHADONE_model3$xreg, h1 = c(50, 70), delta1 = 1, h2 = c(30, 60), delta2 = 1))
plot(rarmaAlt(walker_METHADONE_model3, 100, xreg = walker_METHADONE_model3$xreg, h1 = c(50, 70), delta1 = 1, h2 = c(30, 60), delta2 = 1))
aa <- rarmaAlt(walker_METHADONE_model3, 100, xreg = walker_METHADONE_model3$xreg, h1 = c(50, 70), delta1 = 100, h2 = c(30, 60), delta2 = 100)
dfphase1::rsp(aa)
bb <- dfphase1::rsp(aa)
bb$p
bb$p
bb$fit
aa <- rarmaAlt(walker_METHADONE_model3, 100, xreg = walker_METHADONE_model3$xreg, h1 = c(50), delta1 = 1, h2 = c(30), delta2 = 1, h3 = 70, delta3 = 1)
bb <- dfphase1::rsp(aa)
?dfphase1::rsp
bb$p
diff(bb$fit)
bb$fit
bb$stat
diff(bb$fit)
diff(bb$fit) > 0
which(diff(bb$fit) > 0)
?diff
readrsp <- function(x, lmin = 14, alpha = 0.05) {
res <- dfphase1::rsp(x, lmin = lmin)
sigmean <- res$p[1] < 0.05
sigvar <- res$p[2] < 0.05
sig <- (sigmean + sigvar) > 0
dd <- diff(x$fit)
dd1 <- which(dd[, 1] > 0) + 1
dd2 <- which(dd[, 2] > 0) + 1
out <- list("sigmean" = sigmean, "sigvar" = sigvar, "sig" = sig,
"outliermean" = dd1, "outliervar" = dd2)
out
}
readrsp(bb)
debug(readrsp)
readrsp(bb)
readrsp(aa)
res
sigmean
sigvar
sign(sig)
readrsp(aa)
readrsp <- function(x, lmin = 14, alpha = 0.05) {
res <- dfphase1::rsp(x, lmin = lmin)
sigmean <- res$p[1] < 0.05
sigvar <- res$p[2] < 0.05
sig <- (sigmean + sigvar) > 0
dd <- diff(res$fit)
dd1 <- which(dd[, 1] > 0) + 1
dd2 <- which(dd[, 2] > 0) + 1
out <- list("sigmean" = sigmean, "sigvar" = sigvar, "sig" = sig,
"outliermean" = dd1, "outliervar" = dd2)
out
}
readrsp(aa)
readrsp <- function(x, lmin = 14, alpha = 0.05) {
res <- dfphase1::rsp(x, lmin = lmin)
sigmean <- res$p[1] < 0.05
sigvar <- res$p[2] < 0.05
sig <- (sigmean + sigvar) > 0
dd <- diff(res$fit)
dd1 <- 0
dd2 <- 0
if (length(which(dd[, 1] > 0)) > 0) {
dd1 <- which(dd[, 1] > 0) + 1
}
if (length(which(dd[, 2] > 0)) > 0) {
dd2 <- which(dd[, 2] > 0) + 1
}
out <- list("sigmean" = sigmean, "sigvar" = sigvar, "sig" = sig,
"outliermean" = dd1, "outliervar" = dd2)
out
}
readrsp(aa)
aa <- rarmaAlt(walker_METHADONE_model3, 100, xreg = walker_METHADONE_model3$xreg, h1 = c(50), delta1 = 10, h2 = c(30), delta2 = 10, h3 = 70, delta3 = 10)
aa
readrsp(aa)
aa <- rarmaAlt(walker_METHADONE_model3, 100, xreg = walker_METHADONE_model3$xreg, h1 = c(50), delta1 = 10, h2 = c(30, 50), delta2 = 10, h3 = 70, delta3 = 10)
readrsp(aa)
?rsp
100/15
min(50, round(NROW(aa)/15))
readrsp <- function(x, lmin = 14, alpha = 0.05) {
res <- dfphase1::rsp(x, lmin = lmin)
sigmean <- res$p[1] < 0.05
sigvar <- res$p[2] < 0.05
sig <- (sigmean + sigvar) > 0
dd <- diff(res$fit)
dd1 <- 0
dd2 <- 0
dd3 <- 0
if (length(which(dd[, 1] > 0)) > 0) {
dd1 <- which(dd[, 1] > 0) + 1
}
if (length(which(dd[, 2] > 0)) > 0) {
dd2 <- which(dd[, 2] > 0) + 1
}
if ((length(which(dd[, 1] > 0)) + length(which(dd[, 2] > 0))) > 0) {
dd3 <- unique(c(dd1, dd2))
}
out <- list("sigmean" = sigmean, "sigvar" = sigvar, "sig" = sig,
"outliermean" = dd1, "outliervar" = dd2, "outlier" = dd3)
out
}
readrsp(aa)
readrsp <- function(x, lmin = 14, alpha = 0.05) {
res <- dfphase1::rsp(x, lmin = lmin)
sigmean <- res$p[1] < 0.05
sigvar <- res$p[2] < 0.05
sig <- (sigmean + sigvar) > 0
dd <- diff(res$fit)
dd1 <- 0
dd2 <- 0
dd3 <- 0
if (length(which(dd[, 1] > 0)) > 0) {
dd1 <- which(dd[, 1] > 0) + 1
}
if (length(which(dd[, 2] > 0)) > 0) {
dd2 <- which(dd[, 2] > 0) + 1
}
if ((length(which(dd[, 1] > 0)) + length(which(dd[, 2] > 0))) > 0) {
dd3 <- sort(unique(c(dd1, dd2)))
}
out <- list("sigmean" = sigmean, "sigvar" = sigvar, "sig" = sig,
"outliermean" = dd1, "outliervar" = dd2, "outlier" = dd3)
out
}
readrsp(aa)
aa <- rarmaAlt(walker_METHADONE_model3, 100, xreg = walker_METHADONE_model3$xreg, h1 = c(50), delta1 = 1, h2 = c(30, 50), delta2 = 1, h3 = 70, delta3 = 1)
readrsp(aa)
aa <- rarmaAlt(walker_METHADONE_model3, 100, xreg = walker_METHADONE_model3$xreg, h3 = 70, delta3 = 1)
readrsp(aa)
aa <- rarmaAlt(walker_METHADONE_model3, 100, xreg = walker_METHADONE_model3$xreg, h3 = 70, delta3 = 0.5)
readrsp(aa)
aa <- rarmaAlt(walker_METHADONE_model3, 100, xreg = walker_METHADONE_model3$xreg, h1 = 70, delta1 = 0.5)
readrsp(aa)
?dfphase1::rsp
rblassoAlt <- function(model, n,
h1 = NULL, h2 = NULL, h3 = NULL,
delta1 = 0, delta2 = 0, delta3 = 0,
leftcensoring = 1, rounding = 0, nsim = 1000) {
m <- length(model$Y)
p <- dim(model$Phi)[1]
ss <- dim(model$Mu)[2]
sim <- matrix(NA, nrow = m, ncol = nsim)
sim[1:p, ] <- model$Y[1:p]
for (i in 1:nsim) {
tmpsel <- sample(1:ss, 1)
sim[(p + 1):m, i] <- BayesianLASSOMonitoring::simYph2(0, model$Y, model$Z[, tmpsel], model$Phi[, tmpsel],
model$Mu[, tmpsel], model$sigma2[tmpsel], 1, model$theta[tmpsel],
leftcensoring, rounding, 1e-6, 1)
}
rm <- apply(sim, 1, median)
vv <- mean((model$Y[-c(1:p)] - rm[-c(1:p)]) ^ 2)
tmpsel <- sample(1:nsim, 1)
out <- sim[1:n, tmpsel]
n1 <- length(h1)
n2 <- length(h2)
n3 <- length(h3)
mu <- rep(0, n)
if (n1 > 0) {
for (i in 1:n1) {
mu[h1[i]] <- mu[h1[i]] + sqrt(vv) * delta1
}
}
if (n2 > 0) {
for (i in 1:n2) {
mu[h2[i]:n] <- mu[h2[i]:n] + sqrt(vv) * delta2
}
}
if (n3 > 0) {
for (i in 1:n3) {
mu[h3[i]:n] <- mu[h3[i]:n] + sqrt(vv) * delta3 * (h3[i]:n - h3[i] + 1)
}
}
out <- out + mu
if (leftcensoring == 1) {
out[out < 0] <- 0
}
if (rounding == 1) {
out <- round(out)
}
out
}
load(file = '/Users/yuihuiyao/Library/CloudStorage/Box-Box/2024 Spring/Temporal and Geographical Project for Opioid-overdose ER vistis/dataset/presentation/walker_BUPRENORPHINE_modelB2.Rdat')
object <- modelB2
load(file = '/Users/yuihuiyao/Library/CloudStorage/Box-Box/2024 Spring/Temporal and Geographical Project for Opioid-overdose ER vistis/dataset/presentation/walker_BUPRENORPHINE_modelB2.Rdat')
object <- modelB2
ee <- rblassoAlt(object, n = 100,
h1 = 30,
delta1 = 10,
leftcensoring = 1, rounding = 0, nsim = 1000)
ee
plot(ee)
aa
load(file = '/Users/yuihuiyao/Library/CloudStorage/Box-Box/2024 Spring/Temporal and Geographical Project for Opioid-overdose ER vistis/dataset/presentation/walker_METHADONE_modelB2.Rdat')
object <- modelB2
ee <- rblassoAlt(object, n = 100,
h1 = 30,
delta1 = 10,
leftcensoring = 1, rounding = 0, nsim = 1000)
ee
aa
modelB2$Beta
modelB2$Gamma
ee
ff
aa
object$Z
dim(object$Z)
dim(object$Y)
length(object$Y)
object$Z[, 1]
object$Y
object$Y[1:100]
object$Z[1:100, 1]
Rcpp::compileAttributes()
roxygen2::roxygenize()
roxygen2::roxygenize()
roxygen2::roxygenize()
remove.packages("BayesianLASSOMonitoring")
devtools::install_github
devtools::install_github("bolus123/BayesianLASSOMonitoring", "with-transformation")
load(file = '/Users/yuihuiyao/Library/CloudStorage/Box-Box/2024 Spring/Temporal and Geographical Project for Opioid-overdose ER vistis/dataset/presentation/walker_METHADONE_modelB2.Rdat')
BayesianLASSOMonitoring::readrsp(modelB2$Y)
aa <- BayesianLASSOMonitoring::rblassoAlt(modelB2, 100, h1 = 30, delta1 = 10)
BayesianLASSOMonitoring::readrsp(aa)
aa <- BayesianLASSOMonitoring::rblassoAlt(modelB2, 100)
BayesianLASSOMonitoring::readrsp(aa)
aa <- BayesianLASSOMonitoring::rblassoAlt(modelB2, 100, h3 = 50, delta3 = 10)
BayesianLASSOMonitoring::readrsp(aa)
H1 <- BayesianLASSOMonitoring::getHMatIsolated(100, 5, 14)
H2 <- BayesianLASSOMonitoring::getHMatSustained(100, 5, 14)
H3 <- BayesianLASSOMonitoring::getHMatGradual(100, 5, 14)
H1
H2
H3
aa
BayesianLASSOMonitoring::GibbsRFLSMXYJZ
modelB2$X
businessday <- object$X[, which(colnames(modelB2$X) == "businessday")]
businessday <- modelB2$X[, which(colnames(modelB2$X) == "businessday")]
nonbusinessday <- 1 - businessday
nonbusinessday <- nonbusinessday[1:TT1]
Zlb <- rep(0, TT1)
Zub <- rep(0, TT1)
adjZ <- ((nonbusinessday[1:TT1] == 1) + (Y1 == 0)) == 2
adjZ <- as.numeric(adjZ)
Zlb[adjZ == 1] <- 0
Zub[adjZ == 1] <- Inf
Y <- aa
X <- modelB2$X[1:100, ]
H <- cbind(H1, H2, H3)
bset1 <- list(
"method" = "ALASSO",
"mono" = 0,
"q" = 5,
"A" = diag(rep(1, 5), nrow = 5),
"bound0" = Inf,
"boundqplus1" = 0,
"xi2" = 0.1,
"theta1" = 1,
"theta2" = 1,
"a" = 1,
"b" = 1,
"alpha" = 1,
"beta" = 1,
"updateYJ" = 1,
"adjZ" = adjZ,
"Zlb" = Zlb,
"Zub" = Zub,
"omega2" = 0.03,
"lambda2" = NULL,
"theta" = 1,
"eps" = 1e-32,
"nsim" = 300,
"thin" = 10,
"burnin" = 2000,
"leftcensoring" = 1,
"rounding" = 0
)
BayesianLASSOMonitoring::GibbsRFLSMXYJZ
mm <- BayesianLASSOMonitoring::GibbsRFLSMXYJZ(Y, bset1, X, H)
mm <- BayesianLASSOMonitoring::GibbsRFLSMXYJZ(Y, bset1, X, H)
mm <- BayesianLASSOMonitoring::GibbsRFLSMXYJZ(Y, bset1, X, H)
aa <- BayesianLASSOMonitoring::rblassoAlt(modelB2, 100, h3 = 50, delta3 = 1)
BayesianLASSOMonitoring::readrsp(aa)
H1 <- BayesianLASSOMonitoring::getHMatIsolated(100, 5, 14)
H2 <- BayesianLASSOMonitoring::getHMatSustained(100, 5, 14)
H3 <- BayesianLASSOMonitoring::getHMatGradual(100, 5, 14)
businessday <- modelB2$X[, which(colnames(modelB2$X) == "businessday")]
nonbusinessday <- 1 - businessday
nonbusinessday <- nonbusinessday[1:TT1]
Zlb <- rep(0, TT1)
Zub <- rep(0, TT1)
adjZ <- ((nonbusinessday[1:TT1] == 1) + (Y1 == 0)) == 2
adjZ <- as.numeric(adjZ)
Zlb[adjZ == 1] <- 0
Zub[adjZ == 1] <- Inf
Y <- aa
X <- modelB2$X[1:100, ]
H <- cbind(H1, H2, H3)
bset1 <- list(
"method" = "ALASSO",
"mono" = 0,
"q" = 5,
"A" = diag(rep(1, 5), nrow = 5),
"bound0" = Inf,
"boundqplus1" = 0,
"xi2" = 0.1,
"theta1" = 1,
"theta2" = 1,
"a" = 1,
"b" = 1,
"alpha" = 1,
"beta" = 1,
"updateYJ" = 1,
"adjZ" = adjZ,
"Zlb" = Zlb,
"Zub" = Zub,
"omega2" = 0.03,
"lambda2" = NULL,
"theta" = 1,
"eps" = 1e-32,
"nsim" = 300,
"thin" = 10,
"burnin" = 2000,
"leftcensoring" = 1,
"rounding" = 0
)
mm <- BayesianLASSOMonitoring::GibbsRFLSMXYJZ(Y, bset1, X, H)
mm
aa <- BayesianLASSOMonitoring::rblassoAlt(modelB2, 100, h3 = 50, delta3 = 1)
aa1 <- BayesianLASSOMonitoring::rblasso(modelB2, 100, h3 = 50, delta3 = 1)
aa <- BayesianLASSOMonitoring::rblassoAlt(modelB2, 100, h3 = 50, delta3 = 1)
aa1 <- BayesianLASSOMonitoring::rblassoAlt1(modelB2, 100, h3 = 50, delta3 = 1)
debug( BayesianLASSOMonitoring::rblassoAlt1)
aa1 <- BayesianLASSOMonitoring::rblassoAlt1(modelB2, 100, h3 = 50, delta3 = 1)
remove.packages("BayesianLASSOMonitoring")
devtools::install_github("bolus123/BayesianLASSOMonitoring", "with-transformation")
load(file = '/Users/yuihuiyao/Library/CloudStorage/Box-Box/2024 Spring/Temporal and Geographical Project for Opioid-overdose ER vistis/dataset/presentation/walker_METHADONE_modelB2.Rdat')
aa <- BayesianLASSOMonitoring::rblassoAlt(modelB2, 100, h3 = 50, delta3 = 1)
aa1 <- BayesianLASSOMonitoring::rblassoAlt1(modelB2, 100, h3 = 50, delta3 = 1)
remove.packages("BayesianLASSOMonitoring")
devtools::install_github("bolus123/BayesianLASSOMonitoring", "with-transformation")
load(file = '/Users/yuihuiyao/Library/CloudStorage/Box-Box/2024 Spring/Temporal and Geographical Project for Opioid-overdose ER vistis/dataset/presentation/walker_METHADONE_modelB2.Rdat')
aa <- BayesianLASSOMonitoring::rblassoAlt(modelB2, 100, h3 = 50, delta3 = 1)
aa1 <- BayesianLASSOMonitoring::rblassoAlt1(modelB2, 100, h3 = 50, delta3 = 1)
rblassoAlt1
BayesianLASSOMonitoring::rblassoAlt1
dim(modelB2$Z)
remove.packages("BayesianLASSOMonitoring")
remove.packages("BayesianLASSOMonitoring")
devtools::install_github("bolus123/BayesianLASSOMonitoring")
roxygen2::roxygenise()
remove.packages("BayesianLASSOMonitoring")
devtools::install_github("bolus123/BayesianLASSOMonitoring")
Rcpp::compileAttributes()
roxygen2::roxygenise()
remove.packages("BayesianLASSOMonitoring")
devtools::install_github("bolus123/BayesianLASSOMonitoring")
Rcpp::compileAttributes()
roxygen2::roxygenise()
remove.packages("BayesianLASSOMonitoring")
