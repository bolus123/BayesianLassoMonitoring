bset <- list(
"method" = "ALASSO",
"mono" = 1,
"q" = 5,
"A" = diag(rep(1, 5), nrow = 5),
"bound0" = Inf,
"boundqplus1" = 0,
"xi2" = 0.1,
"theta1" = 1,
"theta2" = 1,
"a" = 1,
"b" = 1,
"alpha" = 1,
"beta" = 1,
"updateYJ" = 1,
"leftcensoring" = 1,
"rounding" = 0,
"lambda2" = NULL,
"theta" = 1,
"eps" = 1e-32,
"nsim" = 300,
"thin" = 10,
"burnin" = 2000
)
##############################################
bb <- BayesianLASSOMonitoring::GibbsRFLSMXYJZ(as.matrix(Y1), bset, X1, H1)
cc <- Ph1MultipleTesting.GammaLaplaceBC(bb, w = 7, FAP0 = 0.05, side = "right-sided")
cc
debug(Ph1MultipleTesting.GammaLaplaceBC)
cc <- Ph1MultipleTesting.GammaLaplaceBC(bb, w = 7, FAP0 = 0.05, side = "right-sided")
mm
cs
sig
grand.sig
tmpsig
tmpsel
tmpsig
Rcpp::compileAttributes()
roxygen2::roxygenise()
debug(Ph1MultipleTesting.GammaLaplaceBC)
cc <- Ph1MultipleTesting.GammaLaplaceBC(bb, w = 7, FAP0 = 0.05, side = "right-sided")
roxygen2::roxygenise()
roxygen2::roxygenise()
remove.packages("BayesianLASSOMonitoring")
devtools::install_github("bolus123/BayesianLASSMonitoring", "with-transformation")
devtools::install_github("bolus123/BayesianLASSMonitoring", "with-transformation")
devtools::install_github("bolus123/BayesianLASSOMonitoring", "with-transformation")
load(file = 'C:/Users/bolus/Box/2024 Spring/Temporal and Geographical Project for Opioid-overdose ER vistis/dataset/walker_OXYCODONE_model2.Rdat')
View(walker_OXYCODONE_model2)
walker_OXYCODONE_model2$x
dim(walker_OXYCODONE_model2$x)
load(file = 'C:/Users/bolus/Box/2024 Spring/Temporal and Geographical Project for Opioid-overdose ER vistis/dataset/walker_METHADONE_model2.Rdat')
walker_METHADONE_model2$x[walker_METHADONE_model2$xreg[, 15] == 0]
hist(walker_METHADONE_model2$x[walker_METHADONE_model2$xreg[, 15] == 0])
hist(walker_METHADONE_model2$x[walker_METHADONE_model2$xreg[, 15] == 1])
walker_METHADONE_model2$x[walker_METHADONE_model2$xreg[, 15] == 1]
plot(walker_METHADONE_model2$x[walker_METHADONE_model2$xreg[, 15] == 1])
plot(walker_METHADONE_model2$x[walker_METHADONE_model2$xreg[, 15] == 1], type = 'l')
plot(BayesianLASSOMonitoring::movaver(walker_METHADONE_model2$x[walker_METHADONE_model2$xreg[, 15] == 1], 7))
plot(walker_METHADONE_model2$x[walker_METHADONE_model2$xreg[, 15] == 0])
hist(walker_METHADONE_model2$x[walker_METHADONE_model2$xreg[, 15] == 0])
plot(BayesianLASSOMonitoring::movaver(walker_METHADONE_model2$x[walker_METHADONE_model2$xreg[, 15] == 1], 14))
load(file = 'C:/Users/bolus/Box/2024 Spring/Temporal and Geographical Project for Opioid-overdose ER vistis/dataset/walker_METHADONE_model2.Rdat')
load(file = 'C:/Users/bolus/Box/2024 Spring/Temporal and Geographical Project for Opioid-overdose ER vistis/dataset/walker_BUORENORPHINE_model2.Rdat')
load(file = 'C:/Users/bolus/Box/2024 Spring/Temporal and Geographical Project for Opioid-overdose ER vistis/dataset/walker_HYDROCODONE_model2.Rdat')
load(file = 'C:/Users/bolus/Box/2024 Spring/Temporal and Geographical Project for Opioid-overdose ER vistis/dataset/walker_OXYCODONE_model2.Rdat')
load(file = 'C:/Users/bolus/Box/2024 Spring/Temporal and Geographical Project for Opioid-overdose ER vistis/dataset/walker_BUORENORPHINE_model2.Rdat')
load(file = 'C:/Users/bolus/Box/2024 Spring/Temporal and Geographical Project for Opioid-overdose ER vistis/dataset/walker_BUPRENORPHINE_model2.Rdat')
load(file = 'C:/Users/bolus/Box/2024 Spring/Temporal and Geographical Project for Opioid-overdose ER vistis/dataset/walker_METHADONE_model2.Rdat')
plot(BayesianLASSOMonitoring::movaver(walker_BUPRENORPHINE_model2$x[walker_BUPRENORPHINE_model2$xreg[, 15] == 1], 14))
plot(BayesianLASSOMonitoring::movaver(walker_BUPRENORPHINE_model2$x[walker_BUPRENORPHINE_model2$xreg[, 15] == 1], 14))
walker_BUPRENORPHINE_model2$x
walker_BUPRENORPHINE_model2$xreg
dim(walker_BUPRENORPHINE_model2$xreg)
plot(BayesianLASSOMonitoring::movaver(walker_BUPRENORPHINE_model2$x[walker_BUPRENORPHINE_model2$xreg[, 16] == 1], 14))
plot(BayesianLASSOMonitoring::movaver(walker_OXYCODONE_model2$x[walker_OXYCODONE_model2$xreg[, 15] == 1], 14))
plot(BayesianLASSOMonitoring::movaver(walker_HYDROCODONE_model2$x[walker_HYDROCODONE_model2$xreg[, 15] == 1], 14))
plot(BayesianLASSOMonitoring::movaver(walker_HYDROCODONE_model2$x[walker_HYDROCODONE_model2$xreg[, 15] == 0], 14))
plot(BayesianLASSOMonitoring::movaver(walker_HYDROCODONE_model2$x[walker_BUPRENOPHINE_model2$xreg[, 15] == 0], 14))
plot(BayesianLASSOMonitoring::movaver(walker_BUPRENOPHINE_model2$x[walker_BUPRENOPHINE_model2$xreg[, 16] == 0], 14))
walker_BUPRENOPHINE_model2$x
walker_BUPRENORPHINE_model2$x
walker_BUPRENOPHINE_model2
walker_BUORENORPHINE_model2
walker_BUPRENORPHINE_model2
plot(BayesianLASSOMonitoring::movaver(walker_BUPRENORPHINE_model2$x[walker_BUPRENORPHINE_model2$xreg[, 16] == 0], 14))
load(file = '')
load(file = 'C:/Users/bolus/Box/2024 Spring/Temporal and Geographical Project for Opioid-overdose ER vistis/dataset/presentation/walker_BUPRENORPHINE_bmodel0.Rdat')
View(walker_BUPRENORPHINE_bmodel0)
walker_BUPRENORPHINE_bmodel0$Z
walker_BUPRENORPHINE_bmodel0$Z[1, ]
hist(walker_BUPRENORPHINE_bmodel0$Z[1, ])
hist(walker_BUPRENORPHINE_bmodel0$Z[1, ])
walker_BUPRENORPHINE_bmodel0$Z[, 1]
plot(walker_BUPRENORPHINE_model2$x)
plot(walker_BUPRENORPHINE_model2$x + apply(walker_BUPRENORPHINE_bmodel0, 1, median))
plot(walker_BUPRENORPHINE_model2$x + apply(walker_BUPRENORPHINE_bmodel0$Z, 1, median))
plot(walker_BUPRENORPHINE_model2$x + rowMeans(walker_BUPRENORPHINE_bmodel0$Z))
plot(walker_BUPRENORPHINE_model2$x + walker_BUPRENORPHINE_bmodel0$Z[, 1])
plot(walker_BUPRENORPHINE_model2$x + walker_BUPRENORPHINE_bmodel0$Z[, 2])
plot(walker_BUPRENORPHINE_model2$x + walker_BUPRENORPHINE_bmodel0$Z[, 3])
plot(walker_BUPRENORPHINE_model2$x + walker_BUPRENORPHINE_bmodel0$Z[, 4])
plot(walker_BUPRENORPHINE_model2$x + walker_BUPRENORPHINE_bmodel0$Z[, 5])
plot(walker_BUPRENORPHINE_model2$x + walker_BUPRENORPHINE_bmodel0$Z[, 6])
plot(walker_BUPRENORPHINE_model2$x + walker_BUPRENORPHINE_bmodel0$Z[, 7])
plot(walker_BUPRENORPHINE_model2$x + walker_BUPRENORPHINE_bmodel0$Z[, 8])
dim(walker_BUPRENORPHINE_bmodel0$Z)
walker_BUPRENORPHINE_model2$x
plot(walker_BUPRENORPHINE_model2$x + walker_BUPRENORPHINE_bmodel0$Z[, 8])
plot(walker_BUPRENORPHINE_model2$x + rowMeans(walker_BUPRENORPHINE_bmodel0$Z))
walker_BUPRENORPHINE_bmodel0$theta
walker_BUPRENORPHINE_bmodel0$sigma2
walker_BUPRENORPHINE_bmodel0$mu0
walker_BUPRENORPHINE_bmodel0$Z[, 1]
plot(walker_BUPRENORPHINE_bmodel0$Z[, 1])
load(file = 'C:/Users/bolus/Box/2024 Spring/Temporal and Geographical Project for Opioid-overdose ER vistis/dataset/presentation/walker_ER_bmodel0.Rdat')
walker_ER_bmodel0$[1:10]
walker_ER_bmodel0$Z[1:10, 1]
walker_ER_bmodel0$Y
walker_ER_bmodel0$Y[1:14, ]
walker_ER_bmodel0$Y[1:14]
walker_BUPRENORPHINE_model2$x
walker_BUPRENORPHINE_model2$x[walker_BUPRENORPHINE_model2$x[, 16] == 1]
walker_BUPRENORPHINE_model2$x[walker_BUPRENORPHINE_model2$x[, 15] == 1]
walker_BUPRENORPHINE_model2$x[walker_BUPRENORPHINE_model2$xreg[, 16] == 1]
walker_BUPRENORPHINE_model2$x[walker_BUPRENORPHINE_model2$xreg[, 16] == 0]
which(walker_BUPRENORPHINE_model2$xreg[, 16] == 0)
hist(walker_BUPRENORPHINE_model2$x[walker_BUPRENORPHINE_model2$xreg[, 16] == 0])
hist(walker_METHADONE_model2$x[walker_METHADONE_model2$xreg[, 16] == 0])
hist(walker_METHADONE_model2$x[walker_METHADONE_model2$xreg[, 15] == 0])
hist(walker_HYDROCODONE_model2$x[walker_HYDROCODONE_model2$xreg[, 15] == 0])
hist(walker_HYDROCODONE_model2$x[walker_HYDROCODONE_model2$xreg[, 15] == 1])
hist(walker_METHADONE_model2$x[walker_METHADONE_model2$xreg[, 16] == 1])
hist(walker_METHADONE_model2$x[walker_METHADONE_model2$xreg[, 15] == 1])
walker_ER_bmodel0$X
dim(walker_ER_bmodel0$X)
hist(walker_ER_bmodel0$Y[walker_ER_bmodel0$X[, 16] == 1])
hist(walker_ER_bmodel0$Y[walker_ER_bmodel0$X[, 16] == 0])
hist(walker_ER_bmodel0$Y[walker_ER_bmodel0$X[, 16] == 0])
hist(walker_ER_bmodel0$Y[walker_ER_bmodel0$X[, 16] == 1])
hist(walker_ER_bmodel0$Y[walker_ER_bmodel0$X[, 15] == 1])
hist(walker_ER_bmodel0$Y[walker_ER_bmodel0$X[, 15] == 0])
hist(walker_METHADONE_model2$x[walker_METHADONE_model2$xreg[, 15] == 1])
hist(walker_HYDROCODONE_model2$x[walker_HYDROCODONE_model2$xreg[, 15] == 1])
walker_HYDROCODONE_model2$x[walker_HYDROCODONE_model2$xreg[, 15] == 1])
walker_HYDROCODONE_model2$x[walker_HYDROCODONE_model2$xreg[, 15] == 1]
walker_OXYCODONE_model2$x[walker_OXYCODONE_model2$xreg[, 15] == 1])
walker_OXYCODONE_model2$x[walker_OXYCODONE_model2$xreg[, 15] == 1]
walker_BUORENORPHINE_model2$x[walker_BUORENORPHINE_model2$xreg[, 15] == 1])
walker_BUORENORPHINE_model2$x[walker_BUORENORPHINE_model2$xreg[, 15] == 1]
walker_BUPRENORPHINE_model2$x[walker_BUPRENORPHINE_model2$xreg[, 15] == 1]
walker_BUPRENORPHINE_model2$x[walker_BUPRENORPHINE_model2$xreg[, 16] == 1]
hist(walker_BUPRENORPHINE_model2$x[walker_BUPRENORPHINE_model2$xreg[, 16] == 1])
walker_METHADONE_model2$x[walker_METHADONE_model2$xreg[, 16] == 1]
walker_METHADONE_model2$x[walker_METHADONE_model2$xreg[, 15] == 1]
hist(walker_METHADONE_model2$x[walker_METHADONE_model2$xreg[, 15] == 1])
hist(walker_ER_bmodel0)
hist(walker_ER_bmodel0$X)
hist(walker_ER_bmodel0$Y)
plot(walker_ER_bmodel0$Y)
plot(walker_ER_bmodel0$Y + apply(walker_ER_bmodel0$Z, 1, median))
plot(walker_ER_bmodel0$Y + rowMeans(walker_ER_bmodel0$Z))
plot(walker_ER_bmodel0$Y + walker_ER_bmodel0$Z[, 1])
plot(walker_ER_bmodel0$Y + walker_ER_bmodel0$Z[, 2])
plot(walker_ER_bmodel0$Y + walker_ER_bmodel0$Z[, 3])
plot(walker_ER_bmodel0$Y + walker_ER_bmodel0$Z[, 4])
plot(walker_ER_bmodel0$Y + walker_ER_bmodel0$Z[, 5])
plot(walker_ER_bmodel0$Y + walker_ER_bmodel0$Z[, 6])
plot(walker_ER_bmodel0$Y + walker_ER_bmodel0$Z[, 7])
plot(walker_ER_bmodel0$Y + walker_ER_bmodel0$Z[, 8])
plot(walker_ER_bmodel0$Y + walker_ER_bmodel0$Z[, 9])
plot(walker_ER_bmodel0$Y + walker_ER_bmodel0$Z[, 10])
BayesianLASSOMonitoring::movaver(walker_ER_bmodel0$Y, 14)
plot(BayesianLASSOMonitoring::movaver(walker_ER_bmodel0$Y, 14))
plot(BayesianLASSOMonitoring::movaver(walker_ER_bmodel0$Y, 30))
plot(BayesianLASSOMonitoring::movaver(walker_ER_bmodel0$Y, 14))
plot(BayesianLASSOMonitoring::movaver(walker_ER_bmodel0$Y, 7))
walker_METHADONE_model2$x[walker_METHADONE_model2$xreg[, 17] == 1]
walker_METHADONE_model2$x[walker_METHADONE_model2$xreg[, 16] == 1]
walker_METHADONE_model2$x[walker_METHADONE_model2$xreg[, 16] == 1]
walker_METHADONE_model2$x[walker_METHADONE_model2$xreg[, 15] == 1]
walker_METHADONE_model2$x[walker_METHADONE_model2$xreg[, 16] == 1]
hist(walker_METHADONE_model2$x[walker_METHADONE_model2$xreg[, 16] == 1])
?tis
tis::isBusinessDay
?
?tis::isBusinessDay
?tis::isBusinessDay
METHADONE <- dat[which((substr(dat$date, 1, 4) %in% c("2017", "2018")) &
(dat$county == "WALKER") & (dat$drug == "METHADONE")), ]
addr <- "C:/Users/yyao17/Box/2024 Spring/Temporal and Geographical Project for Opioid-overdose ER vistis/dataset/"
dataddr <- paste(addr, "ARCOS_AL_2016_2019_cleaned.csv", sep= '')
methadoneaddr <- paste(addr, "walker_METHADONE_model2.Rdat", sep = '')
buprenorphineaddr <- paste(addr, "walker_BUPRENORPHINE_model2.Rdat", sep = '')
oxycodoneaddr <- paste(addr, "walker_OXYCODONE_model2.Rdat", sep = '')
hydrocodoneaddr <- paste(addr, "walker_HYDROCODONE_model2.Rdat", sep = '')
dat <- read.csv(file = dataddr)
addr <- "C:/Users/bolus123/Box/2024 Spring/Temporal and Geographical Project for Opioid-overdose ER vistis/dataset/"
dataddr <- paste(addr, "ARCOS_AL_2016_2019_cleaned.csv", sep= '')
methadoneaddr <- paste(addr, "walker_METHADONE_model2.Rdat", sep = '')
buprenorphineaddr <- paste(addr, "walker_BUPRENORPHINE_model2.Rdat", sep = '')
oxycodoneaddr <- paste(addr, "walker_OXYCODONE_model2.Rdat", sep = '')
hydrocodoneaddr <- paste(addr, "walker_HYDROCODONE_model2.Rdat", sep = '')
dat <- read.csv(file = dataddr)
addr <- "C:/Users/bolus/Box/2024 Spring/Temporal and Geographical Project for Opioid-overdose ER vistis/dataset/"
dataddr <- paste(addr, "ARCOS_AL_2016_2019_cleaned.csv", sep= '')
methadoneaddr <- paste(addr, "walker_METHADONE_model2.Rdat", sep = '')
buprenorphineaddr <- paste(addr, "walker_BUPRENORPHINE_model2.Rdat", sep = '')
oxycodoneaddr <- paste(addr, "walker_OXYCODONE_model2.Rdat", sep = '')
hydrocodoneaddr <- paste(addr, "walker_HYDROCODONE_model2.Rdat", sep = '')
dat <- read.csv(file = dataddr)
METHADONE <- dat[which((substr(dat$date, 1, 4) %in% c("2017", "2018")) &
(dat$county == "WALKER") & (dat$drug == "METHADONE")), ]
date <- as.POSIXct(METHADONE$date)
businessday <- tis::isBusinessDay(date)
holiday <- tis::isHoliday(date)
businessday
cbind(businessday, holiday)
date[1]
date[2]
METHADONE
METHADONE$X
METHADONE$mme_percapita
test <- METHADONE$mme_percapita
test[test == 0] <- NA
auto.arima(test)
forecast::auto.arima(test)
walker_METHADONE_model2$coef
bb <- forecast::auto.arima(test)
bb$x
bb$fitted
sqrt(0.1)
sqrt(0.05)
sqrt(0.01)
Rcpp::compileAttributes()
roxygen2::roxygenise()
Rcpp::compileAttributes()
roxygen2::roxygenise()
remove.packages("BayesianLASSOMonitoring")
devtools::install_github("bolus123/BayesianLASSOMonitoring", "with-transformation")
devtools::install_github("bolus123/BayesianLASSOMonitoring", "with-transformation")
seed <- 12345
load(file = "C:/Users/bolus/Box/2024 Spring/Temporal and Geographical Project for Opioid-overdose ER vistis/dataset/walker_OXYCODONE_model2.Rdat")
object <- walker_OXYCODONE_model2
nnsim <- 100
TT1 <- c(92, 183)
TT2 <- 365
w <- c(1)
#w <- 7
q <- 5
delta <- c(0, 1)
tt <- 0.5
Y.hat.method <- c("median")
side <- "right-sided"
FAP0 <- 0.2
log <- c(FALSE)
sta <- c(FALSE)
pars <- expand.grid(TT1, TT2, w, q, delta, tt, Y.hat.method, side, FAP0, log, sta, 1:nnsim)
X <- 4
set.seed(seed + X)
TT1 <- pars[X, 1]
TT2 <- pars[X, 2]
w <- pars[X, 3]
q <- pars[X, 4]
delta <- pars[X, 5]
tt <- pars[X, 6]
Y.hat.method <- as.character(pars[X, 7])
side <- as.character(pars[X, 8])
FAP0 <- pars[X, 9]
log <- pars[X, 10]
sta <- pars[X, 11]
Xf1 <- BayesianLASSOMonitoring::getXSeasonalityFS(w + TT1 + TT2 + 5000, 7, 2)
Xf2 <- BayesianLASSOMonitoring::getXSeasonalityFS(w + TT1 + TT2 + 5000, 30.4375, 5)
tmpdate <- as.Date("2017-01-01") + (-w + 1):(TT1 + TT2 + 5000)
businessday <- tis::isBusinessDay(tmpdate)
holiday <- tis::isHoliday(tmpdate)
notbusinessday <- 1 - businessday
Xreg <- cbind(Xf1, Xf2, businessday, holiday)
Xreg1 <- Xreg[1:(TT1 + TT2 + w - 1), ]
Y <- BayesianLASSOMonitoring::rarma(object, xreg = Xreg1, n = TT1 + TT2 + w - 1, h = ceiling(TT1 * tt) + w - 1, delta = delta)
Y0 <- Y[1:(w - 1)]
Y1 <- Y[w:(TT1 + w - 1)]
Y2 <- Y[(TT1 + w):(TT1 + TT2 + w - 1)]
#H1 <- BayesianLASSOMonitoring::getHMatMT(TT1, q)
#H2 <- matrix(1, nrow = TT2, ncol = TT1 - q)
#H2sim <- matrix(1, nrow = 5000, ncol = TT1 - q)
H1 <- BayesianLASSOMonitoring::getHMatMT(TT1, q)
H1 <- H1[, seq(2, TT1 - q, 7)]
H1 <- H1[, which(colSums(H1) >= 7)]
H2<- matrix(1, nrow = TT2, ncol = dim(H1)[2])
H2sim <- matrix(1, nrow = 5000, ncol = dim(H1)[2])
XX <- as.matrix(1:(TT1 + TT2 + 5000))
X1 <- as.matrix(XX[1:TT1, ])
X2 <- as.matrix(XX[(TT1 + 1):(TT1 + TT2), ])
X2sim <- as.matrix(XX[(TT1 + 1):(TT1 + 5000), ])
X1 <- cbind(X1, Xreg[1:TT1, ])
X2 <- cbind(X2, Xreg[(TT1 + 1):(TT1 + TT2), ])
bset <- list(
"method" = "ALASSO",
"mono" = 1,
"q" = 5,
"A" = diag(rep(1, 5), nrow = 5),
"bound0" = Inf,
"boundqplus1" = 0,
"xi2" = 0.1,
"theta1" = 1,
"theta2" = 1,
"a" = 1,
"b" = 1,
"alpha" = 1,
"beta" = 1,
"updateYJ" = 1,
"leftcensoring" = 0,
"rounding" = 0,
"missingdata" = notbusinessday,
"missingdatalb" = 0,
"missingdataub" = Inf,
"lambda2" = NULL,
"theta" = 1,
"eps" = 1e-32,
"nsim" = 300,
"thin" = 10,
"burnin" = 2000
)
bb <- BayesianLASSOMonitoring::GibbsRFLSMXYJZ(as.matrix(Y1), bset, X1[, -c(16, 17)], H1)
bb$Z
Y1
bset$missingdata
bb$Z
bb$Z[, 1]
bb$Z[, 2]
bb$Z[, 3]
bb$Z[, 4]
bb$Z[, 5]
bb$Z[, 6]
bb$Z[, 7]
bb$Z[, 8]
remove.packages("BayesianLASSOMonitoring")
devtools::install_github("bolus123/BayesianLASSOMonitoring", "with-transformation")
seed <- 12345
load(file = "C:/Users/bolus/Box/2024 Spring/Temporal and Geographical Project for Opioid-overdose ER vistis/dataset/walker_OXYCODONE_model2.Rdat")
object <- walker_OXYCODONE_model2
nnsim <- 100
TT1 <- c(92, 183)
TT2 <- 365
w <- c(1)
#w <- 7
q <- 5
delta <- c(0, 1)
tt <- 0.5
Y.hat.method <- c("median")
side <- "right-sided"
FAP0 <- 0.2
log <- c(FALSE)
sta <- c(FALSE)
pars <- expand.grid(TT1, TT2, w, q, delta, tt, Y.hat.method, side, FAP0, log, sta, 1:nnsim)
X <- 4
set.seed(seed + X)
TT1 <- pars[X, 1]
TT2 <- pars[X, 2]
w <- pars[X, 3]
q <- pars[X, 4]
delta <- pars[X, 5]
tt <- pars[X, 6]
Y.hat.method <- as.character(pars[X, 7])
side <- as.character(pars[X, 8])
FAP0 <- pars[X, 9]
log <- pars[X, 10]
sta <- pars[X, 11]
Xf1 <- BayesianLASSOMonitoring::getXSeasonalityFS(w + TT1 + TT2 + 5000, 7, 2)
Xf2 <- BayesianLASSOMonitoring::getXSeasonalityFS(w + TT1 + TT2 + 5000, 30.4375, 5)
tmpdate <- as.Date("2017-01-01") + (-w + 1):(TT1 + TT2 + 5000)
businessday <- tis::isBusinessDay(tmpdate)
holiday <- tis::isHoliday(tmpdate)
notbusinessday <- 1 - businessday
Xreg <- cbind(Xf1, Xf2, businessday, holiday)
Xreg1 <- Xreg[1:(TT1 + TT2 + w - 1), ]
Y <- BayesianLASSOMonitoring::rarma(object, xreg = Xreg1, n = TT1 + TT2 + w - 1, h = ceiling(TT1 * tt) + w - 1, delta = delta)
Y0 <- Y[1:(w - 1)]
Y1 <- Y[w:(TT1 + w - 1)]
Y2 <- Y[(TT1 + w):(TT1 + TT2 + w - 1)]
#H1 <- BayesianLASSOMonitoring::getHMatMT(TT1, q)
#H2 <- matrix(1, nrow = TT2, ncol = TT1 - q)
#H2sim <- matrix(1, nrow = 5000, ncol = TT1 - q)
H1 <- BayesianLASSOMonitoring::getHMatMT(TT1, q)
H1 <- H1[, seq(2, TT1 - q, 7)]
H1 <- H1[, which(colSums(H1) >= 7)]
H2<- matrix(1, nrow = TT2, ncol = dim(H1)[2])
H2sim <- matrix(1, nrow = 5000, ncol = dim(H1)[2])
XX <- as.matrix(1:(TT1 + TT2 + 5000))
X1 <- as.matrix(XX[1:TT1, ])
X2 <- as.matrix(XX[(TT1 + 1):(TT1 + TT2), ])
X2sim <- as.matrix(XX[(TT1 + 1):(TT1 + 5000), ])
X1 <- cbind(X1, Xreg[1:TT1, ])
X2 <- cbind(X2, Xreg[(TT1 + 1):(TT1 + TT2), ])
bset <- list(
"method" = "ALASSO",
"mono" = 1,
"q" = 5,
"A" = diag(rep(1, 5), nrow = 5),
"bound0" = Inf,
"boundqplus1" = 0,
"xi2" = 0.1,
"theta1" = 1,
"theta2" = 1,
"a" = 1,
"b" = 1,
"alpha" = 1,
"beta" = 1,
"updateYJ" = 1,
"leftcensoring" = 0,
"rounding" = 0,
"missingdata" = notbusinessday,
"missingdatalb" = 0,
"missingdataub" = Inf,
"lambda2" = NULL,
"theta" = 1,
"eps" = 1e-32,
"nsim" = 300,
"thin" = 10,
"burnin" = 2000
)
##############################################
bb <- BayesianLASSOMonitoring::GibbsRFLSMXYJZ(as.matrix(Y1), bset, X1[, -c(16, 17)], H1)
remove.packages("BayesianLASSOMonitoring")
devtools::install_github("bolus123/BayesianLASSOMonitoring", "with-transformation")
seed <- 12345
load(file = "C:/Users/bolus/Box/2024 Spring/Temporal and Geographical Project for Opioid-overdose ER vistis/dataset/walker_OXYCODONE_model2.Rdat")
object <- walker_OXYCODONE_model2
nnsim <- 100
TT1 <- c(92, 183)
TT2 <- 365
w <- c(1)
#w <- 7
q <- 5
delta <- c(0, 1)
tt <- 0.5
Y.hat.method <- c("median")
side <- "right-sided"
FAP0 <- 0.2
log <- c(FALSE)
sta <- c(FALSE)
pars <- expand.grid(TT1, TT2, w, q, delta, tt, Y.hat.method, side, FAP0, log, sta, 1:nnsim)
X <- 4
set.seed(seed + X)
TT1 <- pars[X, 1]
TT2 <- pars[X, 2]
w <- pars[X, 3]
q <- pars[X, 4]
delta <- pars[X, 5]
tt <- pars[X, 6]
Y.hat.method <- as.character(pars[X, 7])
side <- as.character(pars[X, 8])
FAP0 <- pars[X, 9]
log <- pars[X, 10]
sta <- pars[X, 11]
Xf1 <- BayesianLASSOMonitoring::getXSeasonalityFS(w + TT1 + TT2 + 5000, 7, 2)
Xf2 <- BayesianLASSOMonitoring::getXSeasonalityFS(w + TT1 + TT2 + 5000, 30.4375, 5)
tmpdate <- as.Date("2017-01-01") + (-w + 1):(TT1 + TT2 + 5000)
businessday <- tis::isBusinessDay(tmpdate)
holiday <- tis::isHoliday(tmpdate)
notbusinessday <- 1 - businessday
Xreg <- cbind(Xf1, Xf2, businessday, holiday)
Xreg1 <- Xreg[1:(TT1 + TT2 + w - 1), ]
Y <- BayesianLASSOMonitoring::rarma(object, xreg = Xreg1, n = TT1 + TT2 + w - 1, h = ceiling(TT1 * tt) + w - 1, delta = delta)
Y0 <- Y[1:(w - 1)]
Y1 <- Y[w:(TT1 + w - 1)]
Y2 <- Y[(TT1 + w):(TT1 + TT2 + w - 1)]
#H1 <- BayesianLASSOMonitoring::getHMatMT(TT1, q)
#H2 <- matrix(1, nrow = TT2, ncol = TT1 - q)
#H2sim <- matrix(1, nrow = 5000, ncol = TT1 - q)
H1 <- BayesianLASSOMonitoring::getHMatMT(TT1, q)
H1 <- H1[, seq(2, TT1 - q, 7)]
H1 <- H1[, which(colSums(H1) >= 7)]
H2<- matrix(1, nrow = TT2, ncol = dim(H1)[2])
H2sim <- matrix(1, nrow = 5000, ncol = dim(H1)[2])
XX <- as.matrix(1:(TT1 + TT2 + 5000))
X1 <- as.matrix(XX[1:TT1, ])
X2 <- as.matrix(XX[(TT1 + 1):(TT1 + TT2), ])
X2sim <- as.matrix(XX[(TT1 + 1):(TT1 + 5000), ])
X1 <- cbind(X1, Xreg[1:TT1, ])
X2 <- cbind(X2, Xreg[(TT1 + 1):(TT1 + TT2), ])
bset <- list(
"method" = "ALASSO",
"mono" = 1,
"q" = 5,
"A" = diag(rep(1, 5), nrow = 5),
"bound0" = Inf,
"boundqplus1" = 0,
"xi2" = 0.1,
"theta1" = 1,
"theta2" = 1,
"a" = 1,
"b" = 1,
"alpha" = 1,
"beta" = 1,
"updateYJ" = 1,
"leftcensoring" = 0,
"rounding" = 0,
"missingdata" = notbusinessday,
"missingdatalb" = 0,
"missingdataub" = Inf,
"lambda2" = NULL,
"theta" = 1,
"eps" = 1e-32,
"nsim" = 300,
"thin" = 10,
"burnin" = 2000
)
##############################################
bb <- BayesianLASSOMonitoring::GibbsRFLSMXYJZ(as.matrix(Y1), bset, X1[, -c(16, 17)], H1)
remove.packages("BayesianLASSOMonitoring")
