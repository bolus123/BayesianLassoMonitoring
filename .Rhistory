adjZ <- as.numeric(adjZ)
Zlb[adjZ == 1] <- 0
Zub[adjZ == 1] <- Inf
bset <- list(
"method" = "ALASSO",
"mono" = 1,
"q" = 5,
"A" = diag(rep(1, 5), nrow = 5),
"bound0" = Inf,
"boundqplus1" = 0,
"xi2" = 0.1,
"theta1" = 1,
"theta2" = 1,
"a" = 1,
"b" = 1,
"alpha" = 1,
"beta" = 1,
"updateYJ" = 1,
"leftcensoring" = 0,
"rounding" = 0,
"adjZ" = adjZ,
"Zlb" = Zlb,
"Zub" = Zub,
"lambda2" = NULL,
"theta" = 1,
"eps" = 1e-32,
"nsim" = 300,
"thin" = 10,
"burnin" = 2000
)
##############################################
ff <- arima(Y1, c(5, 0, 0))
Phi <- as.matrix(ff$coef[1:5])
Mu <- as.matrix(rep(ff$coef[6], 183))
sigma2 <- ff$sigma2
ee <- updateZZMD(as.matrix(Y1), as.matrix(rep(0, 183)), Phi, Mu,  sigma2,
1, bset$adjZ, bset$Zlb, bset$Zub,
10, 1, 1e-32)
bb <- BayesianLASSOMonitoring::GibbsRFLSMXYJZ(as.matrix(Y1), bset, X1, H1)
Rcpp::sourceCpp("src/BayesianLASSOMonitoring.cpp")
remove.packages("BayesianLASSOMonitoring")
devtools::install_github("bolus123/BayesianLASSOMonitoring", "with-transformation")
bb <- BayesianLASSOMonitoring::GibbsRFLSMXYJZ(as.matrix(Y1), bset, X1, H1)
seed <- 12345
#load(file = "C:/Users/yyao17/Box/2024 Spring/Temporal and Geographical Project for Opioid-overdose ER vistis/dataset/walker_OXYCODONE_model2.Rdat")
#load(file = "C:/Users/bolus/Box/2023 Summer/BayesianMonitoring/dataset/walker_BUPRENORPHINE_model.Rdat")
#load(file = "C:/Users/bolus/Box/2024 Spring/Temporal and Geographical Project for Opioid-overdose ER vistis/dataset/walker_OXYCODONE_model2.Rdat")
load(file = "/Users/yuihuiyao/Library/CloudStorage/Box-Box/2024 Spring/Temporal and Geographical Project for Opioid-overdose ER vistis/dataset/walker_OXYCODONE_model2.Rdat")
object <- walker_OXYCODONE_model2
nnsim <- 100
TT1 <- c(92, 183)
TT2 <- 365
w <- c(1)
#w <- 7
q <- 5
delta <- c(0, 1)
tt <- 0.5
Y.hat.method <- c("median")
side <- "right-sided"
FAP0 <- 0.2
log <- c(FALSE)
sta <- c(FALSE)
pars <- expand.grid(TT1, TT2, w, q, delta, tt, Y.hat.method, side, FAP0, log, sta, 1:nnsim)
X <- 4
set.seed(seed + X)
TT1 <- pars[X, 1]
TT2 <- pars[X, 2]
w <- pars[X, 3]
q <- pars[X, 4]
delta <- pars[X, 5]
tt <- pars[X, 6]
Y.hat.method <- as.character(pars[X, 7])
side <- as.character(pars[X, 8])
FAP0 <- pars[X, 9]
log <- pars[X, 10]
sta <- pars[X, 11]
Xf1 <- BayesianLASSOMonitoring::getXSeasonalityFS(w + TT1 + TT2 + 5000, 7, 2)
Xf2 <- BayesianLASSOMonitoring::getXSeasonalityFS(w + TT1 + TT2 + 5000, 30.4375, 5)
tmpdate <- as.Date("2017-01-01") + (-w + 1):(TT1 + TT2 + 5000)
businessday <- tis::isBusinessDay(tmpdate)
holiday <- tis::isHoliday(tmpdate)
notbusinessday <- 1 - businessday
Xreg <- cbind(Xf1, Xf2, businessday, holiday)
Xreg1 <- Xreg[1:(TT1 + TT2 + w - 1), ]
Y <- BayesianLASSOMonitoring::rarma(object, xreg = Xreg1, n = TT1 + TT2 + w - 1, h = ceiling(TT1 * tt) + w - 1, delta = delta)
Y0 <- Y[1:(w - 1)]
Y1 <- Y[w:(TT1 + w - 1)]
Y2 <- Y[(TT1 + w):(TT1 + TT2 + w - 1)]
#H1 <- BayesianLASSOMonitoring::getHMatMT(TT1, q)
#H2 <- matrix(1, nrow = TT2, ncol = TT1 - q)
#H2sim <- matrix(1, nrow = 5000, ncol = TT1 - q)
H1 <- BayesianLASSOMonitoring::getHMatMT(TT1, q)
H1 <- H1[, seq(2, TT1 - q, 7)]
H1 <- H1[, which(colSums(H1) >= 7)]
H2<- matrix(1, nrow = TT2, ncol = dim(H1)[2])
H2sim <- matrix(1, nrow = 5000, ncol = dim(H1)[2])
XX <- as.matrix(1:(TT1 + TT2 + 5000))
X1 <- as.matrix(XX[1:TT1, ])
X2 <- as.matrix(XX[(TT1 + 1):(TT1 + TT2), ])
X2sim <- as.matrix(XX[(TT1 + 1):(TT1 + 5000), ])
X1 <- cbind(X1, Xreg[1:TT1, ])
X2 <- cbind(X2, Xreg[(TT1 + 1):(TT1 + TT2), ])
Zlb <- rep(0, 183)
Zub <- rep(0, 183)
adjZ <- ((notbusinessday[1:183] == 1) + (Y1 == 0)) == 2
adjZ <- as.numeric(adjZ)
Zlb[adjZ == 1] <- 0
Zub[adjZ == 1] <- Inf
bset <- list(
"method" = "ALASSO",
"mono" = 1,
"q" = 5,
"A" = diag(rep(1, 5), nrow = 5),
"bound0" = Inf,
"boundqplus1" = 0,
"xi2" = 0.1,
"theta1" = 1,
"theta2" = 1,
"a" = 1,
"b" = 1,
"alpha" = 1,
"beta" = 1,
"updateYJ" = 1,
"leftcensoring" = 0,
"rounding" = 0,
"adjZ" = adjZ,
"Zlb" = Zlb,
"Zub" = Zub,
"lambda2" = NULL,
"theta" = 1,
"eps" = 1e-32,
"nsim" = 300,
"thin" = 10,
"burnin" = 2000
)
bb <- BayesianLASSOMonitoring::GibbsRFLSMXYJZ(as.matrix(Y1), bset, X1, H1)
qq <- GibbsRFLSMXYJZcpp(as.matrix(Y1), 5
bset$A, bset$a, bset$b, bset$alpha, bset$beta,
qq <- GibbsRFLSMXYJZcpp(as.matrix(Y1), 5,
bset$A, bset$a, bset$b, bset$alpha, bset$beta,
bset$theta1, bset$theta2, bset$xi2,
bset$method, bset$mono, bset$bound0, bset$boundqplus1,
bset$updateYJ, bset$theta,
bset$leftcensoring, bset$rounding, bset$eps,
bset$adjZ, bset$Zlb, bset$Zub,
10, 1, 10,
1e-32, NULL, NULL,X1, H1)
Rcpp::sourceCpp("src/BayesianLASSOMonitoring.cpp")
qq <- GibbsRFLSMXYJZcpp(as.matrix(Y1), 5,
bset$A, bset$a, bset$b, bset$alpha, bset$beta,
bset$theta1, bset$theta2, bset$xi2,
bset$method, bset$mono, bset$bound0, bset$boundqplus1,
bset$updateYJ, bset$theta,
bset$leftcensoring, bset$rounding, bset$eps,
bset$adjZ, bset$Zlb, bset$Zub,
10, 1, 10,
1e-32, NULL, NULL,X1, H1)
qq
qq$Z
qq$Z
qq <- GibbsRFLSMXYJZcpp(as.matrix(Y1), 5,
bset$A, bset$a, bset$b, bset$alpha, bset$beta,
bset$theta1, bset$theta2, bset$xi2,
bset$method, bset$mono, bset$bound0, bset$boundqplus1,
bset$updateYJ, bset$theta,
bset$leftcensoring, bset$rounding, bset$eps,
bset$adjZ, bset$Zlb, bset$Zub,
10, 1, 10,
1e-32, NULL, NULL,X1, H1)
qq$Z[, 10]
Rcpp::sourceCpp("src/BayesianLASSOMonitoring.cpp")
qq <- GibbsRFLSMXYJZcpp(as.matrix(Y1), 5,
bset$A, bset$a, bset$b, bset$alpha, bset$beta,
bset$theta1, bset$theta2, bset$xi2,
bset$method, bset$mono, bset$bound0, bset$boundqplus1,
bset$updateYJ, bset$theta,
bset$leftcensoring, bset$rounding, bset$eps,
bset$adjZ, bset$Zlb, bset$Zub,
10, 1, 10,
1e-32, NULL, NULL,X1, H1)
qq$Z[, 1]
Rcpp::sourceCpp("src/BayesianLASSOMonitoring.cpp")
qq <- GibbsRFLSMXYJZcpp(as.matrix(Y1), 5,
bset$A, bset$a, bset$b, bset$alpha, bset$beta,
bset$theta1, bset$theta2, bset$xi2,
bset$method, bset$mono, bset$bound0, bset$boundqplus1,
bset$updateYJ, bset$theta,
bset$leftcensoring, bset$rounding, bset$eps,
bset$adjZ, bset$Zlb, bset$Zub,
10, 1, 10,
1e-32, NULL, NULL,X1, H1)
qq$Z[, 1]
Rcpp::sourceCpp("src/BayesianLASSOMonitoring.cpp")
qq <- GibbsRFLSMXYJZcpp(as.matrix(Y1), 5,
bset$A, bset$a, bset$b, bset$alpha, bset$beta,
bset$theta1, bset$theta2, bset$xi2,
bset$method, bset$mono, bset$bound0, bset$boundqplus1,
bset$updateYJ, bset$theta,
bset$leftcensoring, bset$rounding, bset$eps,
bset$adjZ, bset$Zlb, bset$Zub,
10, 1, 10,
1e-32, NULL, NULL,X1, H1)
qq$Z[, 1]
qq$Z
Y1
qq$Z[, 1]
qq$Z[, 2]
qq$Z[, 1]
Rcpp::sourceCpp("src/BayesianLASSOMonitoring.cpp")
Rcpp::sourceCpp("src/BayesianLASSOMonitoring.cpp")
qq <- GibbsRFLSMXYJZcpp(as.matrix(Y1), 5,
bset$A, bset$a, bset$b, bset$alpha, bset$beta,
bset$theta1, bset$theta2, bset$xi2,
bset$method, bset$mono, bset$bound0, bset$boundqplus1,
bset$updateYJ, bset$theta,
bset$eps,
bset$adjZ, bset$Zlb, bset$Zub,
10, 1, 10,
1e-32, NULL, NULL,X1, H1)
qq
qq <- GibbsRFLSMXYJZcpp(as.matrix(Y1), 5,
bset$A, bset$a, bset$b, bset$alpha, bset$beta,
bset$theta1, bset$theta2, bset$xi2,
bset$method, bset$mono, bset$bound0, bset$boundqplus1,
bset$updateYJ, bset$theta,
bset$eps,
bset$adjZ, bset$Zlb, bset$Zub,
1000, 10, 300,
1e-32, NULL, NULL,X1, H1)
qq$Z
qq$Z[, 1]
qq$Z[1, ]
hist(qq$Z[1, ])
hist(qq$Z[6, ])
hist(qq$Z[5, ])
hist(qq$Z[6, ])
hist(qq$Z[7, ])
hist(qq$Z[8, ])
qq$Z
Rcpp::sourceCpp("src/BayesianLASSOMonitoring.cpp")
qq <- GibbsRFLSMXYJZcpp(as.matrix(Y1), 5,
bset$A, bset$a, bset$b, bset$alpha, bset$beta,
bset$theta1, bset$theta2, bset$xi2,
bset$method, bset$mono, bset$bound0, bset$boundqplus1,
bset$updateYJ, bset$theta,
bset$eps,
bset$adjZ, bset$Zlb, bset$Zub,
1000, 10, 300,
1e-32, NULL, NULL,X1, H1)
qq$Z
qq$Z[1, ]
hist(qq$Z[1, ])
hist(qq$Z[8, ])
hist(qq$Z[9, ])
boxplot(t(qq$Z))
qq$Y
sqrt(0.03)
sqrt(0.05)
sqrt(0.025)
sqrt(0.03)
remove.packages("BayesianLASSOMonitoring")
seed <- 12345
#load(file = "C:/Users/yyao17/Box/2024 Spring/Temporal and Geographical Project for Opioid-overdose ER vistis/dataset/walker_OXYCODONE_model2.Rdat")
#load(file = "C:/Users/bolus/Box/2023 Summer/BayesianMonitoring/dataset/walker_BUPRENORPHINE_model.Rdat")
#load(file = "C:/Users/bolus/Box/2024 Spring/Temporal and Geographical Project for Opioid-overdose ER vistis/dataset/walker_OXYCODONE_model2.Rdat")
load(file = "/Users/yuihuiyao/Library/CloudStorage/Box-Box/2024 Spring/Temporal and Geographical Project for Opioid-overdose ER vistis/dataset/walker_OXYCODONE_model2.Rdat")
object <- walker_OXYCODONE_model2
nnsim <- 100
TT1 <- c(92, 183)
TT2 <- 365
w <- c(1)
#w <- 7
q <- 5
delta <- c(0, 1)
tt <- 0.5
Y.hat.method <- c("median")
side <- "right-sided"
FAP0 <- 0.2
log <- c(FALSE)
sta <- c(FALSE)
pars <- expand.grid(TT1, TT2, w, q, delta, tt, Y.hat.method, side, FAP0, log, sta, 1:nnsim)
X <- 4
set.seed(seed + X)
TT1 <- pars[X, 1]
TT2 <- pars[X, 2]
w <- pars[X, 3]
q <- pars[X, 4]
delta <- pars[X, 5]
tt <- pars[X, 6]
Y.hat.method <- as.character(pars[X, 7])
side <- as.character(pars[X, 8])
FAP0 <- pars[X, 9]
log <- pars[X, 10]
sta <- pars[X, 11]
Xf1 <- BayesianLASSOMonitoring::getXSeasonalityFS(w + TT1 + TT2 + 5000, 7, 2)
devtools::install_github("bolus123/BayesianLASSOMonitoring", "with-transformation")
devtools::install_github("bolus123/BayesianLASSOMonitoring", "with-transformation")
Rcpp:com
Rcpp::compileAttributes()
roxygen2::roxygenise()
devtools::install_github("bolus123/BayesianLASSOMonitoring", "with-transformation")
seed <- 12345
#load(file = "C:/Users/yyao17/Box/2024 Spring/Temporal and Geographical Project for Opioid-overdose ER vistis/dataset/walker_OXYCODONE_model2.Rdat")
#load(file = "C:/Users/bolus/Box/2023 Summer/BayesianMonitoring/dataset/walker_BUPRENORPHINE_model.Rdat")
#load(file = "C:/Users/bolus/Box/2024 Spring/Temporal and Geographical Project for Opioid-overdose ER vistis/dataset/walker_OXYCODONE_model2.Rdat")
load(file = "/Users/yuihuiyao/Library/CloudStorage/Box-Box/2024 Spring/Temporal and Geographical Project for Opioid-overdose ER vistis/dataset/walker_OXYCODONE_model2.Rdat")
object <- walker_OXYCODONE_model2
nnsim <- 100
TT1 <- c(92, 183)
TT2 <- 365
w <- c(1)
#w <- 7
q <- 5
delta <- c(0, 1)
tt <- 0.5
Y.hat.method <- c("median")
side <- "right-sided"
FAP0 <- 0.2
log <- c(FALSE)
sta <- c(FALSE)
pars <- expand.grid(TT1, TT2, w, q, delta, tt, Y.hat.method, side, FAP0, log, sta, 1:nnsim)
X <- 4
set.seed(seed + X)
TT1 <- pars[X, 1]
TT2 <- pars[X, 2]
w <- pars[X, 3]
q <- pars[X, 4]
delta <- pars[X, 5]
tt <- pars[X, 6]
Y.hat.method <- as.character(pars[X, 7])
side <- as.character(pars[X, 8])
FAP0 <- pars[X, 9]
log <- pars[X, 10]
sta <- pars[X, 11]
Xf1 <- BayesianLASSOMonitoring::getXSeasonalityFS(w + TT1 + TT2 + 5000, 7, 2)
Xf2 <- BayesianLASSOMonitoring::getXSeasonalityFS(w + TT1 + TT2 + 5000, 30.4375, 5)
tmpdate <- as.Date("2017-01-01") + (-w + 1):(TT1 + TT2 + 5000)
businessday <- tis::isBusinessDay(tmpdate)
holiday <- tis::isHoliday(tmpdate)
notbusinessday <- 1 - businessday
Xreg <- cbind(Xf1, Xf2, businessday, holiday)
Xreg1 <- Xreg[1:(TT1 + TT2 + w - 1), ]
Y <- BayesianLASSOMonitoring::rarma(object, xreg = Xreg1, n = TT1 + TT2 + w - 1, h = ceiling(TT1 * tt) + w - 1, delta = delta)
Y0 <- Y[1:(w - 1)]
Y1 <- Y[w:(TT1 + w - 1)]
Y2 <- Y[(TT1 + w):(TT1 + TT2 + w - 1)]
#H1 <- BayesianLASSOMonitoring::getHMatMT(TT1, q)
#H2 <- matrix(1, nrow = TT2, ncol = TT1 - q)
#H2sim <- matrix(1, nrow = 5000, ncol = TT1 - q)
H1 <- BayesianLASSOMonitoring::getHMatMT(TT1, q)
H1 <- H1[, seq(2, TT1 - q, 7)]
H1 <- H1[, which(colSums(H1) >= 7)]
H2<- matrix(1, nrow = TT2, ncol = dim(H1)[2])
H2sim <- matrix(1, nrow = 5000, ncol = dim(H1)[2])
XX <- as.matrix(1:(TT1 + TT2 + 5000))
X1 <- as.matrix(XX[1:TT1, ])
X2 <- as.matrix(XX[(TT1 + 1):(TT1 + TT2), ])
X2sim <- as.matrix(XX[(TT1 + 1):(TT1 + 5000), ])
X1 <- cbind(X1, Xreg[1:TT1, ])
X2 <- cbind(X2, Xreg[(TT1 + 1):(TT1 + TT2), ])
Zlb <- rep(0, 183)
Zub <- rep(0, 183)
adjZ <- ((notbusinessday[1:183] == 1) + (Y1 == 0)) == 2
adjZ <- as.numeric(adjZ)
Zlb[adjZ == 1] <-
Zub[adjZ == 1] <- Inf
bset <- list(
"method" = "ALASSO",
"mono" = 1,
"q" = 5,
"A" = diag(rep(1, 5), nrow = 5),
"bound0" = Inf,
"boundqplus1" = 0,
"xi2" = 0.1,
"theta1" = 1,
"theta2" = 1,
"a" = 1,
"b" = 1,
"alpha" = 1,
"beta" = 1,
"updateYJ" = 1,
"adjZ" = adjZ,
"Zlb" = Zlb,
"Zub" = Zub,
"lambda2" = NULL,
"theta" = 1,
"eps" = 1e-32,
"nsim" = 300,
"thin" = 10,
"burnin" = 2000
)
##############################################
bb <- BayesianLASSOMonitoring::GibbsRFLSMXYJZ(as.matrix(Y1), bset, X1, H1)
qq <- GibbsRFLSMXYJZcpp(as.matrix(Y1), 5,
bset$A, bset$a, bset$b, bset$alpha, bset$beta,
bset$theta1, bset$theta2, bset$xi2,
bset$method, bset$mono, bset$bound0, bset$boundqplus1,
bset$updateYJ, bset$theta,
bset$eps,
bset$adjZ, bset$Zlb, bset$Zub,
1000, 10, 300,
1e-32, NULL, NULL,X1, H1)
Rcpp::sourceCpp("src/BayesianLASSOMonitoring.cpp")
qq <- GibbsRFLSMXYJZcpp(as.matrix(Y1), 5,
bset$A, bset$a, bset$b, bset$alpha, bset$beta,
bset$theta1, bset$theta2, bset$xi2,
bset$method, bset$mono, bset$bound0, bset$boundqplus1,
bset$updateYJ, bset$theta,
bset$eps,
bset$adjZ, bset$Zlb, bset$Zub,
1000, 10, 300,
1e-32, NULL, NULL,X1, H1)
seed <- 12345
#load(file = "C:/Users/yyao17/Box/2024 Spring/Temporal and Geographical Project for Opioid-overdose ER vistis/dataset/walker_OXYCODONE_model2.Rdat")
#load(file = "C:/Users/bolus/Box/2023 Summer/BayesianMonitoring/dataset/walker_BUPRENORPHINE_model.Rdat")
#load(file = "C:/Users/bolus/Box/2024 Spring/Temporal and Geographical Project for Opioid-overdose ER vistis/dataset/walker_OXYCODONE_model2.Rdat")
load(file = "/Users/yuihuiyao/Library/CloudStorage/Box-Box/2024 Spring/Temporal and Geographical Project for Opioid-overdose ER vistis/dataset/walker_OXYCODONE_model2.Rdat")
object <- walker_OXYCODONE_model2
nnsim <- 100
TT1 <- c(92, 183)
TT2 <- 365
w <- c(1)
#w <- 7
q <- 5
delta <- c(0, 1)
tt <- 0.5
Y.hat.method <- c("median")
side <- "right-sided"
FAP0 <- 0.2
log <- c(FALSE)
sta <- c(FALSE)
pars <- expand.grid(TT1, TT2, w, q, delta, tt, Y.hat.method, side, FAP0, log, sta, 1:nnsim)
X <- 4
set.seed(seed + X)
TT1 <- pars[X, 1]
TT2 <- pars[X, 2]
w <- pars[X, 3]
q <- pars[X, 4]
delta <- pars[X, 5]
tt <- pars[X, 6]
Y.hat.method <- as.character(pars[X, 7])
side <- as.character(pars[X, 8])
FAP0 <- pars[X, 9]
log <- pars[X, 10]
sta <- pars[X, 11]
Xf1 <- BayesianLASSOMonitoring::getXSeasonalityFS(w + TT1 + TT2 + 5000, 7, 2)
Xf2 <- BayesianLASSOMonitoring::getXSeasonalityFS(w + TT1 + TT2 + 5000, 30.4375, 5)
tmpdate <- as.Date("2017-01-01") + (-w + 1):(TT1 + TT2 + 5000)
businessday <- tis::isBusinessDay(tmpdate)
holiday <- tis::isHoliday(tmpdate)
notbusinessday <- 1 - businessday
Xreg <- cbind(Xf1, Xf2, businessday, holiday)
Xreg1 <- Xreg[1:(TT1 + TT2 + w - 1), ]
Y <- BayesianLASSOMonitoring::rarma(object, xreg = Xreg1, n = TT1 + TT2 + w - 1, h = ceiling(TT1 * tt) + w - 1, delta = delta)
Y0 <- Y[1:(w - 1)]
Y1 <- Y[w:(TT1 + w - 1)]
Y2 <- Y[(TT1 + w):(TT1 + TT2 + w - 1)]
#H1 <- BayesianLASSOMonitoring::getHMatMT(TT1, q)
#H2 <- matrix(1, nrow = TT2, ncol = TT1 - q)
#H2sim <- matrix(1, nrow = 5000, ncol = TT1 - q)
H1 <- BayesianLASSOMonitoring::getHMatMT(TT1, q)
H1 <- H1[, seq(2, TT1 - q, 7)]
H1 <- H1[, which(colSums(H1) >= 7)]
H2<- matrix(1, nrow = TT2, ncol = dim(H1)[2])
H2sim <- matrix(1, nrow = 5000, ncol = dim(H1)[2])
XX <- as.matrix(1:(TT1 + TT2 + 5000))
X1 <- as.matrix(XX[1:TT1, ])
X2 <- as.matrix(XX[(TT1 + 1):(TT1 + TT2), ])
X2sim <- as.matrix(XX[(TT1 + 1):(TT1 + 5000), ])
X1 <- cbind(X1, Xreg[1:TT1, ])
X2 <- cbind(X2, Xreg[(TT1 + 1):(TT1 + TT2), ])
Zlb <- rep(0, 183)
Zub <- rep(0, 183)
adjZ <- ((notbusinessday[1:183] == 1) + (Y1 == 0)) == 2
adjZ <- as.numeric(adjZ)
Zlb[adjZ == 1] <-
Zub[adjZ == 1] <- Inf
bset <- list(
"method" = "ALASSO",
"mono" = 1,
"q" = 5,
"A" = diag(rep(1, 5), nrow = 5),
"bound0" = Inf,
"boundqplus1" = 0,
"xi2" = 0.1,
"theta1" = 1,
"theta2" = 1,
"a" = 1,
"b" = 1,
"alpha" = 1,
"beta" = 1,
"updateYJ" = 1,
"adjZ" = adjZ,
"Zlb" = Zlb,
"Zub" = Zub,
"lambda2" = NULL,
"theta" = 1,
"eps" = 1e-32,
"nsim" = 300,
"thin" = 10,
"burnin" = 2000
)
qq <- GibbsRFLSMXYJZcpp(as.matrix(Y1), 5,
bset$A, bset$a, bset$b, bset$alpha, bset$beta,
bset$theta1, bset$theta2, bset$xi2,
bset$method, bset$mono, bset$bound0, bset$boundqplus1,
bset$updateYJ, bset$theta,
bset$eps,
bset$adjZ, bset$Zlb, bset$Zub,
1000, 10, 300,
1e-32, NULL, NULL,X1, H1)
remove.packages("BayesianLASSOMonitoring")
