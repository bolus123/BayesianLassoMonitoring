Y1 <- Y[w:(TT1 + w - 1)]
Y2 <- Y[(TT1 + w):(TT1 + TT2 + w - 1)]
#H1 <- BayesianLASSOMonitoring::getHMatMT(TT1, q)
#H2 <- matrix(1, nrow = TT2, ncol = TT1 - q)
#H2sim <- matrix(1, nrow = 5000, ncol = TT1 - q)
H1 <- BayesianLASSOMonitoring::getHMatMT(TT1, q)
#H1 <- H1[, seq(2, TT1 - q, 7)]
#H1 <- H1[, which(colSums(H1) >= 7)]
H2<- matrix(1, nrow = TT2, ncol = dim(H1)[2])
H2sim <- matrix(1, nrow = 5000, ncol = dim(H1)[2])
XX <- as.matrix(1:(TT1 + TT2 + 5000))
X1 <- as.matrix(XX[1:TT1, ])
X2 <- as.matrix(XX[(TT1 + 1):(TT1 + TT2), ])
X2sim <- as.matrix(XX[(TT1 + 1):(TT1 + 5000), ])
X1 <- cbind(X1, Xreg[1:TT1, ])
X2 <- cbind(X2, Xreg[(TT1 + 1):(TT1 + TT2), ])
bset <- list(
"method" = "regression",
"mono" = 0,
"q" = 5,
"A" = diag(rep(1, 5), nrow = 5),
"bound0" = Inf,
"boundqplus1" = 0,
"xi2" = 0.1,
"theta1" = 1,
"theta2" = 1,
"a" = 1,
"b" = 1,
"alpha" = 1,
"beta" = 1,
"updateYJ" = 1,
"leftcensoring" = 1,
"rounding" = 0,
"lambda2" = NULL,
"theta" = 1,
"eps" = 1e-32,
"nsim" = 300,
"thin" = 10,
"burnin" = 2000
)
bb <- GibbsRFLSMXYJZcpp(as.matrix(Y1), bset$q, bset$A, bset$a, bset$b, bset$alpha, bset$beta,
bset$theta1, bset$theta2, bset$xi2,
bset$method, bset$mono, bset$bound0, bset$boundqplus1,
bset$updateYJ, bset$theta,
bset$leftcensoring, bset$rounding, bset$eps,
bset$nsim, bset$thin, bset$burnin,
bset$eps,
NULL,
NULL,
X1,
H1)
Rcpp::sourceCpp("src/BayesianLASSOMonitoring.cpp")
bb <- GibbsRFLSMXYJZcpp(as.matrix(Y1), bset$q, bset$A, bset$a, bset$b, bset$alpha, bset$beta,
bset$theta1, bset$theta2, bset$xi2,
bset$method, bset$mono, bset$bound0, bset$boundqplus1,
bset$updateYJ, bset$theta,
bset$leftcensoring, bset$rounding, bset$eps,
bset$nsim, bset$thin, bset$burnin,
bset$eps,
NULL,
NULL,
X1,
H1)
bb
bb$theta
hist(bb$theta)
bb$Z
bb$lambda2
bb$theta
bb$theta
bb$Beta
bb$Zeta
bb$Zeta[1, ]
bb$Zeta[, 1]
bb$Tau
bb$mu0
bb$mu0
object
object$fitted
plot(object$fitted)
plot(bb$Z)
bb$Gamma[1, ]
bb$Gamma[, 1]
bb$Gamma
bb$Gamma[1, ]
bb$Gamma[, 1]
rowMeans(bb$Gamma * bb$Tau)
plot(rowMeans(bb$Gamma * bb$Tau))
X
pars[4, ]
bb$Mu
rowMeans(bb$Mu)
plot(rowMeans(bb$Mu))
plot(rowMeans(bb$Mu), type = 'l')
bb$Phi
bb$mu0
Y1
hist(Y1)
plot(Y1)
points(rowMeans(bb$Mu))
points(rowMeans(bb$Mu), type = 'l', col = 'red')
bb$Mu
aaa <- apply(bb$Mu, 1, median, na.rm = T)
aaa
plot(Y)
plot(Y1)
plot(Y1, type = 'l')
points(aaa, type = 'l', col = 'red')
Y1
length(Y1)
length(aaa)
bb <- BayesianLASSOMonitoring::GibbsRFLSMXYJZ(as.matrix(Y1), bset, X1, H1)
cc <- BayesianLASSOMonitoring::simYph2(0, bb$Y, bb$Z[, 1], bb$Mu[, 1], bb$sigma2[1],
bset$updateYJ, bset$theta, bset$leftcensoring,
bset$rounding, bset$eps)
bset$eps
BayesianLASSOMonitoring::simYph2
cc <- BayesianLASSOMonitoring::simYph2(0, bb$Y, bb$Z[, 1], bb$Phi[, 1], bb$Mu[, 1], bb$sigma2[1],
bset$updateYJ, bset$theta, bset$leftcensoring,
bset$rounding, bset$eps)
cc
cc <- BayesianLASSOMonitoring::Ph1MultipleTesting.Y01(bb)
cc
cc$grandsig
cc$sig
bb$sigma2
object$sigma2
bb$sigma2
mean(bb$sigma2)
cc$Yph1
cc$adj.alpha
cc$lim
cc$sig
183/2
92 - 5
cc$sig
plot(cc$sig)
debug(BayesianLASSOMonitoring::Ph1MultipleTesting.Y01)
cc <- BayesianLASSOMonitoring::Ph1MultipleTesting.Y01(bb)
Mu0
model$X %*% (model$Beta[, tmpsel] *
model$Zeta[, tmpsel])
Mu0
plot(mode$Y)
plot(model$Y)
points(Mu0, col = 'red', type = 'l')
simYph2
ph1mat
ph1mat[, 1]
ph1mat[, 2]
Mu0
adj.alpha
dim(ph1mat)
lim
model$Y
model$Y[-c(1:q)]
((lim[, 1] <= model$Y[-c(1:q)]) & (model$Y[-c(1:q)] <=
lim[, 2]))
1 - ((lim[, 1] <= model$Y[-c(1:q)]) & (model$Y[-c(1:q)] <=
lim[, 2]))
pars
seed <- 12345
#load(file = "C:/Users/yyao17/Box/2024 Spring/Temporal and Geographical Project for Opioid-overdose ER vistis/dataset/walker_OXYCODONE_model2.Rdat")
#load(file = "C:/Users/bolus/Box/2023 Summer/BayesianMonitoring/dataset/walker_BUPRENORPHINE_model.Rdat")
#load(file = "C:/Users/bolus/Box/2024 Spring/Temporal and Geographical Project for Opioid-overdose ER vistis/dataset/walker_OXYCODONE_model2.Rdat")
load(file = "/Users/yuihuiyao/Library/CloudStorage/Box-Box/2024 Spring/Temporal and Geographical Project for Opioid-overdose ER vistis/dataset/walker_OXYCODONE_model2.Rdat")
object <- walker_OXYCODONE_model2
nnsim <- 100
TT1 <- c(92, 183)
TT2 <- 365
w <- c(1)
#w <- 7
q <- 5
delta <- c(0, 1)
tt <- 0.5
Y.hat.method <- c("median")
side <- "right-sided"
FAP0 <- 0.2
log <- c(FALSE)
sta <- c(FALSE)
pars <- expand.grid(TT1, TT2, w, q, delta, tt, Y.hat.method, side, FAP0, log, sta, 1:nnsim)
X <- 2
set.seed(seed + X)
TT1 <- pars[X, 1]
TT2 <- pars[X, 2]
w <- pars[X, 3]
q <- pars[X, 4]
delta <- pars[X, 5]
tt <- pars[X, 6]
Y.hat.method <- as.character(pars[X, 7])
side <- as.character(pars[X, 8])
FAP0 <- pars[X, 9]
log <- pars[X, 10]
sta <- pars[X, 11]
Xf1 <- BayesianLASSOMonitoring::getXSeasonalityFS(w + TT1 + TT2 + 5000, 7, 2)
Xf2 <- BayesianLASSOMonitoring::getXSeasonalityFS(w + TT1 + TT2 + 5000, 30.4375, 5)
tmpdate <- as.Date("2017-01-01") + (-w + 1):(TT1 + TT2 + 5000)
businessday <- tis::isBusinessDay(tmpdate)
holiday <- tis::isHoliday(tmpdate)
Xreg <- cbind(Xf1, Xf2, businessday, holiday)
Xreg1 <- Xreg[1:(TT1 + TT2 + w - 1), ]
Y <- BayesianLASSOMonitoring::rarma(object, xreg = Xreg1, n = TT1 + TT2 + w - 1, h = ceiling(TT1 * tt) + w - 1, delta = delta)
Y0 <- Y[1:(w - 1)]
Y1 <- Y[w:(TT1 + w - 1)]
Y2 <- Y[(TT1 + w):(TT1 + TT2 + w - 1)]
#H1 <- BayesianLASSOMonitoring::getHMatMT(TT1, q)
#H2 <- matrix(1, nrow = TT2, ncol = TT1 - q)
#H2sim <- matrix(1, nrow = 5000, ncol = TT1 - q)
H1 <- BayesianLASSOMonitoring::getHMatMT(TT1, q)
#H1 <- H1[, seq(2, TT1 - q, 7)]
#H1 <- H1[, which(colSums(H1) >= 7)]
H2<- matrix(1, nrow = TT2, ncol = dim(H1)[2])
H2sim <- matrix(1, nrow = 5000, ncol = dim(H1)[2])
XX <- as.matrix(1:(TT1 + TT2 + 5000))
X1 <- as.matrix(XX[1:TT1, ])
X2 <- as.matrix(XX[(TT1 + 1):(TT1 + TT2), ])
X2sim <- as.matrix(XX[(TT1 + 1):(TT1 + 5000), ])
X1 <- cbind(X1, Xreg[1:TT1, ])
X2 <- cbind(X2, Xreg[(TT1 + 1):(TT1 + TT2), ])
bset <- list(
"method" = "regression",
"mono" = 0,
"q" = 5,
"A" = diag(rep(1, 5), nrow = 5),
"bound0" = Inf,
"boundqplus1" = 0,
"xi2" = 0.1,
"theta1" = 1,
"theta2" = 1,
"a" = 1,
"b" = 1,
"alpha" = 1,
"beta" = 1,
"updateYJ" = 1,
"leftcensoring" = 1,
"rounding" = 0,
"lambda2" = NULL,
"theta" = 1,
"eps" = 1e-32,
"nsim" = 300,
"thin" = 10,
"burnin" = 2000
)
bb <- BayesianLASSOMonitoring::GibbsRFLSMXYJZ(as.matrix(Y1), bset, X1, H1)
bb
bb$theta
hist(bb$theta)
bb$theta
undebug(BayesianLASSOMonitoring::Ph1MultipleTesting.Y01)
cc <- BayesianLASSOMonitoring::Ph1MultipleTesting.Y01(bb)
cc
cc$sig
cc$grandsig
seed <- 12345
alpha <- c(0.03083069, 0.06242601, 0.09120189)
lambda <- 0.239385
pi <- 0.1453097
nnsim <- 100
TT1 <- c(92, 183)
#TT1 <- c(92)
TT2 <- 365
w <- c(1)
#w <- 7
q <- 5
delta <- c(0, 0.5, 1)
tt <- 0.8
Y.hat.method <- c("median")
side <- "right-sided"
FAP0 <- 0.2
log <- c(FALSE)
sta <- c(FALSE)
pars <- expand.grid(TT1, TT2, w, q, delta, tt, Y.hat.method, side, FAP0, log, sta, 1:nnsim)
X <- 2
set.seed(seed + X)
TT1 <- pars[X, 1]
TT2 <- pars[X, 2]
w <- pars[X, 3]
q <- pars[X, 4]
delta <- pars[X, 5]
tt <- pars[X, 6]
Y.hat.method <- as.character(pars[X, 7])
side <- as.character(pars[X, 8])
FAP0 <- pars[X, 9]
log <- pars[X, 10]
sta <- pars[X, 11]
Y <- BayesianLASSOMonitoring::rzinpoisinar3(TT1 + TT2, alpha, lambda, pi,
ceiling(TT1 * tt), delta = delta, burnin = 100)
Y0 <- Y[1:(w - 1)]
Y1 <- Y[w:(TT1 + w - 1)]
Y2 <- Y[(TT1 + w):(TT1 + TT2 + w - 1)]
#H1 <- BayesianLASSOMonitoring::getHMatMT(TT1, q)
#H2 <- matrix(1, nrow = TT2, ncol = TT1 - q)
#H2sim <- matrix(1, nrow = 5000, ncol = TT1 - q)
H1 <- BayesianLASSOMonitoring::getHMatMT(TT1, q)
#H1 <- H1[, seq(1, TT1 - q, 7)]
#H1 <- H1[, -c(colSums(H1) < 7)]
H2<- matrix(1, nrow = TT2, ncol = dim(H1)[2])
H2sim <- matrix(1, nrow = 5000, ncol = dim(H1)[2])
##############################################
bset <- list(
"method" = "MT",
"mono" = 0,
"q" = 5,
"A" = diag(nrow = 5),
"bound0" = Inf,
"boundqplus1" = 0,
"xi2" = 0.1,
"theta1" = 1,
"theta2" = 1,
"a" = 1,
"b" = 1,
"alpha" = 1,
"beta" = 1,
"updateYJ" = 1,
"leftcensoring" = 1,
"rounding" = 1,
"theta" = 1,
"eps" = 1e-32,
"nsim" = 300,
"thin" = 10,
"burnin" = 2000
)
##############################################
bb <- BayesianLASSOMonitoring::GibbsRFLSMXYJZ(as.matrix(Y1), bset, H = H1)
cc <- BayesianLASSOMonitoring::Ph1MultipleTesting.Y01(bb)
cc$grandsig
cc$sig
cc$adj.alpha
cc$Yph1
cc$Yph1[, 1]
seed <- 12345
alpha <- c(0.03083069, 0.06242601, 0.09120189)
lambda <- 0.239385
pi <- 0.1453097
nnsim <- 100
TT1 <- c(92, 183)
#TT1 <- c(92)
TT2 <- 365
w <- c(1)
#w <- 7
q <- 5
delta <- c(0, 0.5, 1)
tt <- 0.8
Y.hat.method <- c("median")
side <- "right-sided"
FAP0 <- 0.2
log <- c(FALSE)
sta <- c(FALSE)
pars <- expand.grid(TT1, TT2, w, q, delta, tt, Y.hat.method, side, FAP0, log, sta, 1:nnsim)
X <- 6
set.seed(seed + X)
TT1 <- pars[X, 1]
TT2 <- pars[X, 2]
w <- pars[X, 3]
q <- pars[X, 4]
delta <- pars[X, 5]
tt <- pars[X, 6]
Y.hat.method <- as.character(pars[X, 7])
side <- as.character(pars[X, 8])
FAP0 <- pars[X, 9]
log <- pars[X, 10]
sta <- pars[X, 11]
Y <- BayesianLASSOMonitoring::rzinpoisinar3(TT1 + TT2, alpha, lambda, pi,
ceiling(TT1 * tt), delta = delta, burnin = 100)
Y0 <- Y[1:(w - 1)]
Y1 <- Y[w:(TT1 + w - 1)]
Y2 <- Y[(TT1 + w):(TT1 + TT2 + w - 1)]
#H1 <- BayesianLASSOMonitoring::getHMatMT(TT1, q)
#H2 <- matrix(1, nrow = TT2, ncol = TT1 - q)
#H2sim <- matrix(1, nrow = 5000, ncol = TT1 - q)
H1 <- BayesianLASSOMonitoring::getHMatMT(TT1, q)
#H1 <- H1[, seq(1, TT1 - q, 7)]
#H1 <- H1[, -c(colSums(H1) < 7)]
H2<- matrix(1, nrow = TT2, ncol = dim(H1)[2])
H2sim <- matrix(1, nrow = 5000, ncol = dim(H1)[2])
##############################################
bset <- list(
"method" = "MT",
"mono" = 0,
"q" = 5,
"A" = diag(nrow = 5),
"bound0" = Inf,
"boundqplus1" = 0,
"xi2" = 0.1,
"theta1" = 1,
"theta2" = 1,
"a" = 1,
"b" = 1,
"alpha" = 1,
"beta" = 1,
"updateYJ" = 1,
"leftcensoring" = 1,
"rounding" = 1,
"theta" = 1,
"eps" = 1e-32,
"nsim" = 300,
"thin" = 10,
"burnin" = 2000
)
##############################################
bb <- BayesianLASSOMonitoring::GibbsRFLSMXYJZ(as.matrix(Y1), bset, H = H1)
cc <- BayesianLASSOMonitoring::Ph1MultipleTesting.Y01(bb)
cc$grandsig
cc$sig
cc <- BayesianLASSOMonitoring::Ph1MultipleTesting.Y01(bb,
updateYJ = bset$updateYJ,
leftcensoring = bset$leftcensoring,
rounding = bset$rounding)
cc$adj.alpha
cc$sig
cc$grandsig
plot(Y1)
bb$Mu
rowMeans(bb$Mu)
plot(rowMeans(bb$Mu))
bb$theta
bb$mu0\
bb$mu0
hist(bb$mu0)
plot(Y1)
plot(cc$Yph1[, 1])
plot(Y1)
for (i in 1:1000) {
points(cc$Yph1[, i], col = 'grey')
}
points(Y1)
remove.packages("BayesianLASSOMonitoring")
devtools::install_github("bolus123/BayesianLASSOMonitoring", "with-transformation")
devtools::install_github("bolus123/BayesianLASSOMonitoring", "with-transformation")
seed <- 12345
alpha <- c(0.03083069, 0.06242601, 0.09120189)
lambda <- 0.239385
pi <- 0.1453097
nnsim <- 100
TT1 <- c(92, 183)
#TT1 <- c(92)
TT2 <- 365
w <- c(1)
#w <- 7
q <- 5
delta <- c(0, 0.5, 1)
tt <- 0.8
Y.hat.method <- c("median")
side <- "right-sided"
FAP0 <- 0.2
log <- c(FALSE)
sta <- c(FALSE)
pars <- expand.grid(TT1, TT2, w, q, delta, tt, Y.hat.method, side, FAP0, log, sta, 1:nnsim)
X <- 6
set.seed(seed + X)
TT1 <- pars[X, 1]
TT2 <- pars[X, 2]
w <- pars[X, 3]
q <- pars[X, 4]
delta <- pars[X, 5]
tt <- pars[X, 6]
Y.hat.method <- as.character(pars[X, 7])
side <- as.character(pars[X, 8])
FAP0 <- pars[X, 9]
log <- pars[X, 10]
sta <- pars[X, 11]
Y <- BayesianLASSOMonitoring::rzinpoisinar3(TT1 + TT2, alpha, lambda, pi,
ceiling(TT1 * tt), delta = delta, burnin = 100)
Y0 <- Y[1:(w - 1)]
Y1 <- Y[w:(TT1 + w - 1)]
Y2 <- Y[(TT1 + w):(TT1 + TT2 + w - 1)]
#H1 <- BayesianLASSOMonitoring::getHMatMT(TT1, q)
#H2 <- matrix(1, nrow = TT2, ncol = TT1 - q)
#H2sim <- matrix(1, nrow = 5000, ncol = TT1 - q)
H1 <- BayesianLASSOMonitoring::getHMatMT(TT1, q)
#H1 <- H1[, seq(1, TT1 - q, 7)]
#H1 <- H1[, -c(colSums(H1) < 7)]
H2<- matrix(1, nrow = TT2, ncol = dim(H1)[2])
H2sim <- matrix(1, nrow = 5000, ncol = dim(H1)[2])
##############################################
bset <- list(
"method" = "MT",
"mono" = 0,
"q" = 5,
"A" = diag(nrow = 5),
"bound0" = Inf,
"boundqplus1" = 0,
"xi2" = 0.1,
"theta1" = 1,
"theta2" = 1,
"a" = 1,
"b" = 1,
"alpha" = 1,
"beta" = 1,
"updateYJ" = 1,
"leftcensoring" = 1,
"rounding" = 1,
"theta" = 1,
"eps" = 1e-32,
"nsim" = 300,
"thin" = 10,
"burnin" = 2000
)
##############################################
bb <- BayesianLASSOMonitoring::GibbsRFLSMXYJZ(as.matrix(Y1), bset, H = H1)
cc <- BayesianLASSOMonitoring::Ph1MultipleTesting.Y01(bb,
updateYJ = bset$updateYJ,
leftcensoring = bset$leftcensoring,
rounding = bset$rounding)
cc
cc$grandsig
cc$sig
X
cc$Yph1
cc$sig
BayesianLASSOMonitoring::Ph1MultipleTesting.Y01
remove.packages("BayesianLASSOMonitoring")
