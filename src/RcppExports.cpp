// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// getV
arma::mat getV(arma::colvec Y, int q);
RcppExport SEXP _BayesianLASSOMonitoring_getV(SEXP YSEXP, SEXP qSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::colvec >::type Y(YSEXP);
    Rcpp::traits::input_parameter< int >::type q(qSEXP);
    rcpp_result_gen = Rcpp::wrap(getV(Y, q));
    return rcpp_result_gen;
END_RCPP
}
// rtwosegnorm
arma::colvec rtwosegnorm(int n, double a, double b, double mean, double sd);
RcppExport SEXP _BayesianLASSOMonitoring_rtwosegnorm(SEXP nSEXP, SEXP aSEXP, SEXP bSEXP, SEXP meanSEXP, SEXP sdSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< double >::type a(aSEXP);
    Rcpp::traits::input_parameter< double >::type b(bSEXP);
    Rcpp::traits::input_parameter< double >::type mean(meanSEXP);
    Rcpp::traits::input_parameter< double >::type sd(sdSEXP);
    rcpp_result_gen = Rcpp::wrap(rtwosegnorm(n, a, b, mean, sd));
    return rcpp_result_gen;
END_RCPP
}
// getGMat
arma::mat getGMat(int T, int q);
RcppExport SEXP _BayesianLASSOMonitoring_getGMat(SEXP TSEXP, SEXP qSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type T(TSEXP);
    Rcpp::traits::input_parameter< int >::type q(qSEXP);
    rcpp_result_gen = Rcpp::wrap(getGMat(T, q));
    return rcpp_result_gen;
END_RCPP
}
// getPhiMat
arma::mat getPhiMat(arma::colvec Phi, int T);
RcppExport SEXP _BayesianLASSOMonitoring_getPhiMat(SEXP PhiSEXP, SEXP TSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::colvec >::type Phi(PhiSEXP);
    Rcpp::traits::input_parameter< int >::type T(TSEXP);
    rcpp_result_gen = Rcpp::wrap(getPhiMat(Phi, T));
    return rcpp_result_gen;
END_RCPP
}
// getHMatMT
arma::mat getHMatMT(int T, int q);
RcppExport SEXP _BayesianLASSOMonitoring_getHMatMT(SEXP TSEXP, SEXP qSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type T(TSEXP);
    Rcpp::traits::input_parameter< int >::type q(qSEXP);
    rcpp_result_gen = Rcpp::wrap(getHMatMT(T, q));
    return rcpp_result_gen;
END_RCPP
}
// getHMatSustained
arma::mat getHMatSustained(int T, int q);
RcppExport SEXP _BayesianLASSOMonitoring_getHMatSustained(SEXP TSEXP, SEXP qSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type T(TSEXP);
    Rcpp::traits::input_parameter< int >::type q(qSEXP);
    rcpp_result_gen = Rcpp::wrap(getHMatSustained(T, q));
    return rcpp_result_gen;
END_RCPP
}
// getHMatIsolated
arma::mat getHMatIsolated(int T, int q);
RcppExport SEXP _BayesianLASSOMonitoring_getHMatIsolated(SEXP TSEXP, SEXP qSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type T(TSEXP);
    Rcpp::traits::input_parameter< int >::type q(qSEXP);
    rcpp_result_gen = Rcpp::wrap(getHMatIsolated(T, q));
    return rcpp_result_gen;
END_RCPP
}
// getHMatGradual
arma::mat getHMatGradual(int T, int q);
RcppExport SEXP _BayesianLASSOMonitoring_getHMatGradual(SEXP TSEXP, SEXP qSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type T(TSEXP);
    Rcpp::traits::input_parameter< int >::type q(qSEXP);
    rcpp_result_gen = Rcpp::wrap(getHMatGradual(T, q));
    return rcpp_result_gen;
END_RCPP
}
// getXSeasonalityFS
arma::mat getXSeasonalityFS(int T, double s, int n);
RcppExport SEXP _BayesianLASSOMonitoring_getXSeasonalityFS(SEXP TSEXP, SEXP sSEXP, SEXP nSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type T(TSEXP);
    Rcpp::traits::input_parameter< double >::type s(sSEXP);
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    rcpp_result_gen = Rcpp::wrap(getXSeasonalityFS(T, s, n));
    return rcpp_result_gen;
END_RCPP
}
// GibbsRFLSMcpp
Rcpp::List GibbsRFLSMcpp(arma::colvec& Y, int& q, arma::mat& A, double& a, double& b, double& alpha, double& beta, double& theta1, double& theta2, double& xi2, Rcpp::String& method, double& bound0, double& boundqplus1, int& nsim, int& by, int& burnin, double& tol, Rcpp::Nullable<Rcpp::NumericMatrix> H);
RcppExport SEXP _BayesianLASSOMonitoring_GibbsRFLSMcpp(SEXP YSEXP, SEXP qSEXP, SEXP ASEXP, SEXP aSEXP, SEXP bSEXP, SEXP alphaSEXP, SEXP betaSEXP, SEXP theta1SEXP, SEXP theta2SEXP, SEXP xi2SEXP, SEXP methodSEXP, SEXP bound0SEXP, SEXP boundqplus1SEXP, SEXP nsimSEXP, SEXP bySEXP, SEXP burninSEXP, SEXP tolSEXP, SEXP HSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::colvec& >::type Y(YSEXP);
    Rcpp::traits::input_parameter< int& >::type q(qSEXP);
    Rcpp::traits::input_parameter< arma::mat& >::type A(ASEXP);
    Rcpp::traits::input_parameter< double& >::type a(aSEXP);
    Rcpp::traits::input_parameter< double& >::type b(bSEXP);
    Rcpp::traits::input_parameter< double& >::type alpha(alphaSEXP);
    Rcpp::traits::input_parameter< double& >::type beta(betaSEXP);
    Rcpp::traits::input_parameter< double& >::type theta1(theta1SEXP);
    Rcpp::traits::input_parameter< double& >::type theta2(theta2SEXP);
    Rcpp::traits::input_parameter< double& >::type xi2(xi2SEXP);
    Rcpp::traits::input_parameter< Rcpp::String& >::type method(methodSEXP);
    Rcpp::traits::input_parameter< double& >::type bound0(bound0SEXP);
    Rcpp::traits::input_parameter< double& >::type boundqplus1(boundqplus1SEXP);
    Rcpp::traits::input_parameter< int& >::type nsim(nsimSEXP);
    Rcpp::traits::input_parameter< int& >::type by(bySEXP);
    Rcpp::traits::input_parameter< int& >::type burnin(burninSEXP);
    Rcpp::traits::input_parameter< double& >::type tol(tolSEXP);
    Rcpp::traits::input_parameter< Rcpp::Nullable<Rcpp::NumericMatrix> >::type H(HSEXP);
    rcpp_result_gen = Rcpp::wrap(GibbsRFLSMcpp(Y, q, A, a, b, alpha, beta, theta1, theta2, xi2, method, bound0, boundqplus1, nsim, by, burnin, tol, H));
    return rcpp_result_gen;
END_RCPP
}
// GibbsRFLSMUpdatecpp
Rcpp::List GibbsRFLSMUpdatecpp(arma::colvec Y, int q, arma::mat A, double a, double b, double alpha, double beta, double theta1, double theta2, double xi2, Rcpp::String method, int monophi, double bound0, double boundqplus1, int nsim, int by, int burnin, double tol, Rcpp::Nullable<Rcpp::NumericMatrix> G, Rcpp::Nullable<Rcpp::List> oldpars, Rcpp::Nullable<Rcpp::NumericMatrix> H);
RcppExport SEXP _BayesianLASSOMonitoring_GibbsRFLSMUpdatecpp(SEXP YSEXP, SEXP qSEXP, SEXP ASEXP, SEXP aSEXP, SEXP bSEXP, SEXP alphaSEXP, SEXP betaSEXP, SEXP theta1SEXP, SEXP theta2SEXP, SEXP xi2SEXP, SEXP methodSEXP, SEXP monophiSEXP, SEXP bound0SEXP, SEXP boundqplus1SEXP, SEXP nsimSEXP, SEXP bySEXP, SEXP burninSEXP, SEXP tolSEXP, SEXP GSEXP, SEXP oldparsSEXP, SEXP HSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::colvec >::type Y(YSEXP);
    Rcpp::traits::input_parameter< int >::type q(qSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type A(ASEXP);
    Rcpp::traits::input_parameter< double >::type a(aSEXP);
    Rcpp::traits::input_parameter< double >::type b(bSEXP);
    Rcpp::traits::input_parameter< double >::type alpha(alphaSEXP);
    Rcpp::traits::input_parameter< double >::type beta(betaSEXP);
    Rcpp::traits::input_parameter< double >::type theta1(theta1SEXP);
    Rcpp::traits::input_parameter< double >::type theta2(theta2SEXP);
    Rcpp::traits::input_parameter< double >::type xi2(xi2SEXP);
    Rcpp::traits::input_parameter< Rcpp::String >::type method(methodSEXP);
    Rcpp::traits::input_parameter< int >::type monophi(monophiSEXP);
    Rcpp::traits::input_parameter< double >::type bound0(bound0SEXP);
    Rcpp::traits::input_parameter< double >::type boundqplus1(boundqplus1SEXP);
    Rcpp::traits::input_parameter< int >::type nsim(nsimSEXP);
    Rcpp::traits::input_parameter< int >::type by(bySEXP);
    Rcpp::traits::input_parameter< int >::type burnin(burninSEXP);
    Rcpp::traits::input_parameter< double >::type tol(tolSEXP);
    Rcpp::traits::input_parameter< Rcpp::Nullable<Rcpp::NumericMatrix> >::type G(GSEXP);
    Rcpp::traits::input_parameter< Rcpp::Nullable<Rcpp::List> >::type oldpars(oldparsSEXP);
    Rcpp::traits::input_parameter< Rcpp::Nullable<Rcpp::NumericMatrix> >::type H(HSEXP);
    rcpp_result_gen = Rcpp::wrap(GibbsRFLSMUpdatecpp(Y, q, A, a, b, alpha, beta, theta1, theta2, xi2, method, monophi, bound0, boundqplus1, nsim, by, burnin, tol, G, oldpars, H));
    return rcpp_result_gen;
END_RCPP
}
// lhf
arma::mat lhf(arma::colvec Y, arma::mat Phi, arma::mat Mu, double sigma2);
RcppExport SEXP _BayesianLASSOMonitoring_lhf(SEXP YSEXP, SEXP PhiSEXP, SEXP MuSEXP, SEXP sigma2SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::colvec >::type Y(YSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Phi(PhiSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Mu(MuSEXP);
    Rcpp::traits::input_parameter< double >::type sigma2(sigma2SEXP);
    rcpp_result_gen = Rcpp::wrap(lhf(Y, Phi, Mu, sigma2));
    return rcpp_result_gen;
END_RCPP
}
// boxcoxtr
arma::colvec boxcoxtr(arma::colvec Y, double theta);
RcppExport SEXP _BayesianLASSOMonitoring_boxcoxtr(SEXP YSEXP, SEXP thetaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::colvec >::type Y(YSEXP);
    Rcpp::traits::input_parameter< double >::type theta(thetaSEXP);
    rcpp_result_gen = Rcpp::wrap(boxcoxtr(Y, theta));
    return rcpp_result_gen;
END_RCPP
}
// invboxcoxtr
arma::colvec invboxcoxtr(arma::colvec Ybc, double theta);
RcppExport SEXP _BayesianLASSOMonitoring_invboxcoxtr(SEXP YbcSEXP, SEXP thetaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::colvec >::type Ybc(YbcSEXP);
    Rcpp::traits::input_parameter< double >::type theta(thetaSEXP);
    rcpp_result_gen = Rcpp::wrap(invboxcoxtr(Ybc, theta));
    return rcpp_result_gen;
END_RCPP
}
// invyeojohnsontr
arma::colvec invyeojohnsontr(arma::colvec Yyj, double theta, double eps);
RcppExport SEXP _BayesianLASSOMonitoring_invyeojohnsontr(SEXP YyjSEXP, SEXP thetaSEXP, SEXP epsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::colvec >::type Yyj(YyjSEXP);
    Rcpp::traits::input_parameter< double >::type theta(thetaSEXP);
    Rcpp::traits::input_parameter< double >::type eps(epsSEXP);
    rcpp_result_gen = Rcpp::wrap(invyeojohnsontr(Yyj, theta, eps));
    return rcpp_result_gen;
END_RCPP
}
// yeojohnsontr
arma::colvec yeojohnsontr(arma::colvec Y, double theta, double eps);
RcppExport SEXP _BayesianLASSOMonitoring_yeojohnsontr(SEXP YSEXP, SEXP thetaSEXP, SEXP epsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::colvec >::type Y(YSEXP);
    Rcpp::traits::input_parameter< double >::type theta(thetaSEXP);
    Rcpp::traits::input_parameter< double >::type eps(epsSEXP);
    rcpp_result_gen = Rcpp::wrap(yeojohnsontr(Y, theta, eps));
    return rcpp_result_gen;
END_RCPP
}
// lhBCf
arma::mat lhBCf(arma::colvec Y, arma::mat Phi, arma::mat Mu, double sigma2, double theta);
RcppExport SEXP _BayesianLASSOMonitoring_lhBCf(SEXP YSEXP, SEXP PhiSEXP, SEXP MuSEXP, SEXP sigma2SEXP, SEXP thetaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::colvec >::type Y(YSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Phi(PhiSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Mu(MuSEXP);
    Rcpp::traits::input_parameter< double >::type sigma2(sigma2SEXP);
    Rcpp::traits::input_parameter< double >::type theta(thetaSEXP);
    rcpp_result_gen = Rcpp::wrap(lhBCf(Y, Phi, Mu, sigma2, theta));
    return rcpp_result_gen;
END_RCPP
}
// lhYJf
arma::mat lhYJf(arma::colvec Y, arma::mat Phi, arma::mat Mu, double sigma2, double theta);
RcppExport SEXP _BayesianLASSOMonitoring_lhYJf(SEXP YSEXP, SEXP PhiSEXP, SEXP MuSEXP, SEXP sigma2SEXP, SEXP thetaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::colvec >::type Y(YSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Phi(PhiSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Mu(MuSEXP);
    Rcpp::traits::input_parameter< double >::type sigma2(sigma2SEXP);
    Rcpp::traits::input_parameter< double >::type theta(thetaSEXP);
    rcpp_result_gen = Rcpp::wrap(lhYJf(Y, Phi, Mu, sigma2, theta));
    return rcpp_result_gen;
END_RCPP
}
// llhYJf
arma::mat llhYJf(arma::colvec Y, arma::mat Phi, arma::mat Mu, double sigma2, double theta, double eps);
RcppExport SEXP _BayesianLASSOMonitoring_llhYJf(SEXP YSEXP, SEXP PhiSEXP, SEXP MuSEXP, SEXP sigma2SEXP, SEXP thetaSEXP, SEXP epsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::colvec >::type Y(YSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Phi(PhiSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Mu(MuSEXP);
    Rcpp::traits::input_parameter< double >::type sigma2(sigma2SEXP);
    Rcpp::traits::input_parameter< double >::type theta(thetaSEXP);
    Rcpp::traits::input_parameter< double >::type eps(epsSEXP);
    rcpp_result_gen = Rcpp::wrap(llhYJf(Y, Phi, Mu, sigma2, theta, eps));
    return rcpp_result_gen;
END_RCPP
}
// thetaBoxCoxMH
arma::mat thetaBoxCoxMH(arma::colvec Y, arma::mat Phi, arma::mat Mu, double sigma2, double oldtheta, int burnin, int nsim, double tol);
RcppExport SEXP _BayesianLASSOMonitoring_thetaBoxCoxMH(SEXP YSEXP, SEXP PhiSEXP, SEXP MuSEXP, SEXP sigma2SEXP, SEXP oldthetaSEXP, SEXP burninSEXP, SEXP nsimSEXP, SEXP tolSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::colvec >::type Y(YSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Phi(PhiSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Mu(MuSEXP);
    Rcpp::traits::input_parameter< double >::type sigma2(sigma2SEXP);
    Rcpp::traits::input_parameter< double >::type oldtheta(oldthetaSEXP);
    Rcpp::traits::input_parameter< int >::type burnin(burninSEXP);
    Rcpp::traits::input_parameter< int >::type nsim(nsimSEXP);
    Rcpp::traits::input_parameter< double >::type tol(tolSEXP);
    rcpp_result_gen = Rcpp::wrap(thetaBoxCoxMH(Y, Phi, Mu, sigma2, oldtheta, burnin, nsim, tol));
    return rcpp_result_gen;
END_RCPP
}
// thetaYeoJohnsonMH
arma::mat thetaYeoJohnsonMH(arma::colvec Y, arma::mat Phi, arma::mat Mu, double sigma2, double oldtheta, int burnin, int nsim, double tol);
RcppExport SEXP _BayesianLASSOMonitoring_thetaYeoJohnsonMH(SEXP YSEXP, SEXP PhiSEXP, SEXP MuSEXP, SEXP sigma2SEXP, SEXP oldthetaSEXP, SEXP burninSEXP, SEXP nsimSEXP, SEXP tolSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::colvec >::type Y(YSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Phi(PhiSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Mu(MuSEXP);
    Rcpp::traits::input_parameter< double >::type sigma2(sigma2SEXP);
    Rcpp::traits::input_parameter< double >::type oldtheta(oldthetaSEXP);
    Rcpp::traits::input_parameter< int >::type burnin(burninSEXP);
    Rcpp::traits::input_parameter< int >::type nsim(nsimSEXP);
    Rcpp::traits::input_parameter< double >::type tol(tolSEXP);
    rcpp_result_gen = Rcpp::wrap(thetaYeoJohnsonMH(Y, Phi, Mu, sigma2, oldtheta, burnin, nsim, tol));
    return rcpp_result_gen;
END_RCPP
}
// updatethetaYJMH
arma::mat updatethetaYJMH(arma::colvec Y, arma::mat Phi, arma::mat Mu, double sigma2, double oldtheta, int burnin, int nsim, double tol);
RcppExport SEXP _BayesianLASSOMonitoring_updatethetaYJMH(SEXP YSEXP, SEXP PhiSEXP, SEXP MuSEXP, SEXP sigma2SEXP, SEXP oldthetaSEXP, SEXP burninSEXP, SEXP nsimSEXP, SEXP tolSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::colvec >::type Y(YSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Phi(PhiSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Mu(MuSEXP);
    Rcpp::traits::input_parameter< double >::type sigma2(sigma2SEXP);
    Rcpp::traits::input_parameter< double >::type oldtheta(oldthetaSEXP);
    Rcpp::traits::input_parameter< int >::type burnin(burninSEXP);
    Rcpp::traits::input_parameter< int >::type nsim(nsimSEXP);
    Rcpp::traits::input_parameter< double >::type tol(tolSEXP);
    rcpp_result_gen = Rcpp::wrap(updatethetaYJMH(Y, Phi, Mu, sigma2, oldtheta, burnin, nsim, tol));
    return rcpp_result_gen;
END_RCPP
}
// updateKappaTheta
Rcpp::List updateKappaTheta(arma::colvec Y, arma::mat Phi, arma::mat Mu, double sigma2, double oldkappa, double oldtheta, int burnin, int nsim, double tol);
RcppExport SEXP _BayesianLASSOMonitoring_updateKappaTheta(SEXP YSEXP, SEXP PhiSEXP, SEXP MuSEXP, SEXP sigma2SEXP, SEXP oldkappaSEXP, SEXP oldthetaSEXP, SEXP burninSEXP, SEXP nsimSEXP, SEXP tolSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::colvec >::type Y(YSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Phi(PhiSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Mu(MuSEXP);
    Rcpp::traits::input_parameter< double >::type sigma2(sigma2SEXP);
    Rcpp::traits::input_parameter< double >::type oldkappa(oldkappaSEXP);
    Rcpp::traits::input_parameter< double >::type oldtheta(oldthetaSEXP);
    Rcpp::traits::input_parameter< int >::type burnin(burninSEXP);
    Rcpp::traits::input_parameter< int >::type nsim(nsimSEXP);
    Rcpp::traits::input_parameter< double >::type tol(tolSEXP);
    rcpp_result_gen = Rcpp::wrap(updateKappaTheta(Y, Phi, Mu, sigma2, oldkappa, oldtheta, burnin, nsim, tol));
    return rcpp_result_gen;
END_RCPP
}
// GibbsRFLSMBoxCoxcpp
Rcpp::List GibbsRFLSMBoxCoxcpp(arma::colvec& Y, int& q, arma::mat& A, double& a, double& b, double& alpha, double& beta, double& theta1, double& theta2, double& xi2, Rcpp::String& method, double& bound0, double& boundqplus1, int updateBC, double& theta, int& nsim, int& by, int& burnin, double& tol, Rcpp::Nullable<Rcpp::NumericMatrix> G, Rcpp::Nullable<Rcpp::List> oldpars, Rcpp::Nullable<Rcpp::NumericMatrix> H);
RcppExport SEXP _BayesianLASSOMonitoring_GibbsRFLSMBoxCoxcpp(SEXP YSEXP, SEXP qSEXP, SEXP ASEXP, SEXP aSEXP, SEXP bSEXP, SEXP alphaSEXP, SEXP betaSEXP, SEXP theta1SEXP, SEXP theta2SEXP, SEXP xi2SEXP, SEXP methodSEXP, SEXP bound0SEXP, SEXP boundqplus1SEXP, SEXP updateBCSEXP, SEXP thetaSEXP, SEXP nsimSEXP, SEXP bySEXP, SEXP burninSEXP, SEXP tolSEXP, SEXP GSEXP, SEXP oldparsSEXP, SEXP HSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::colvec& >::type Y(YSEXP);
    Rcpp::traits::input_parameter< int& >::type q(qSEXP);
    Rcpp::traits::input_parameter< arma::mat& >::type A(ASEXP);
    Rcpp::traits::input_parameter< double& >::type a(aSEXP);
    Rcpp::traits::input_parameter< double& >::type b(bSEXP);
    Rcpp::traits::input_parameter< double& >::type alpha(alphaSEXP);
    Rcpp::traits::input_parameter< double& >::type beta(betaSEXP);
    Rcpp::traits::input_parameter< double& >::type theta1(theta1SEXP);
    Rcpp::traits::input_parameter< double& >::type theta2(theta2SEXP);
    Rcpp::traits::input_parameter< double& >::type xi2(xi2SEXP);
    Rcpp::traits::input_parameter< Rcpp::String& >::type method(methodSEXP);
    Rcpp::traits::input_parameter< double& >::type bound0(bound0SEXP);
    Rcpp::traits::input_parameter< double& >::type boundqplus1(boundqplus1SEXP);
    Rcpp::traits::input_parameter< int >::type updateBC(updateBCSEXP);
    Rcpp::traits::input_parameter< double& >::type theta(thetaSEXP);
    Rcpp::traits::input_parameter< int& >::type nsim(nsimSEXP);
    Rcpp::traits::input_parameter< int& >::type by(bySEXP);
    Rcpp::traits::input_parameter< int& >::type burnin(burninSEXP);
    Rcpp::traits::input_parameter< double& >::type tol(tolSEXP);
    Rcpp::traits::input_parameter< Rcpp::Nullable<Rcpp::NumericMatrix> >::type G(GSEXP);
    Rcpp::traits::input_parameter< Rcpp::Nullable<Rcpp::List> >::type oldpars(oldparsSEXP);
    Rcpp::traits::input_parameter< Rcpp::Nullable<Rcpp::NumericMatrix> >::type H(HSEXP);
    rcpp_result_gen = Rcpp::wrap(GibbsRFLSMBoxCoxcpp(Y, q, A, a, b, alpha, beta, theta1, theta2, xi2, method, bound0, boundqplus1, updateBC, theta, nsim, by, burnin, tol, G, oldpars, H));
    return rcpp_result_gen;
END_RCPP
}
// rtrnorm
arma::colvec rtrnorm(int n, double mean, double sd, double lower, double upper);
RcppExport SEXP _BayesianLASSOMonitoring_rtrnorm(SEXP nSEXP, SEXP meanSEXP, SEXP sdSEXP, SEXP lowerSEXP, SEXP upperSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< double >::type mean(meanSEXP);
    Rcpp::traits::input_parameter< double >::type sd(sdSEXP);
    Rcpp::traits::input_parameter< double >::type lower(lowerSEXP);
    Rcpp::traits::input_parameter< double >::type upper(upperSEXP);
    rcpp_result_gen = Rcpp::wrap(rtrnorm(n, mean, sd, lower, upper));
    return rcpp_result_gen;
END_RCPP
}
// GibbsRFLSMYeoJohnsonZcpp
Rcpp::List GibbsRFLSMYeoJohnsonZcpp(arma::colvec& Y, int& q, arma::mat& A, double& a, double& b, double& alpha, double& beta, double& theta1, double& theta2, double& xi2, Rcpp::String& method, double& bound0, double& boundqplus1, int updateYJ, double& theta, int updateZ, double eps, int& nsim, int& by, int& burnin, double& tol, Rcpp::Nullable<Rcpp::NumericMatrix> G, Rcpp::Nullable<Rcpp::List> oldpars, Rcpp::Nullable<Rcpp::NumericMatrix> H);
RcppExport SEXP _BayesianLASSOMonitoring_GibbsRFLSMYeoJohnsonZcpp(SEXP YSEXP, SEXP qSEXP, SEXP ASEXP, SEXP aSEXP, SEXP bSEXP, SEXP alphaSEXP, SEXP betaSEXP, SEXP theta1SEXP, SEXP theta2SEXP, SEXP xi2SEXP, SEXP methodSEXP, SEXP bound0SEXP, SEXP boundqplus1SEXP, SEXP updateYJSEXP, SEXP thetaSEXP, SEXP updateZSEXP, SEXP epsSEXP, SEXP nsimSEXP, SEXP bySEXP, SEXP burninSEXP, SEXP tolSEXP, SEXP GSEXP, SEXP oldparsSEXP, SEXP HSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::colvec& >::type Y(YSEXP);
    Rcpp::traits::input_parameter< int& >::type q(qSEXP);
    Rcpp::traits::input_parameter< arma::mat& >::type A(ASEXP);
    Rcpp::traits::input_parameter< double& >::type a(aSEXP);
    Rcpp::traits::input_parameter< double& >::type b(bSEXP);
    Rcpp::traits::input_parameter< double& >::type alpha(alphaSEXP);
    Rcpp::traits::input_parameter< double& >::type beta(betaSEXP);
    Rcpp::traits::input_parameter< double& >::type theta1(theta1SEXP);
    Rcpp::traits::input_parameter< double& >::type theta2(theta2SEXP);
    Rcpp::traits::input_parameter< double& >::type xi2(xi2SEXP);
    Rcpp::traits::input_parameter< Rcpp::String& >::type method(methodSEXP);
    Rcpp::traits::input_parameter< double& >::type bound0(bound0SEXP);
    Rcpp::traits::input_parameter< double& >::type boundqplus1(boundqplus1SEXP);
    Rcpp::traits::input_parameter< int >::type updateYJ(updateYJSEXP);
    Rcpp::traits::input_parameter< double& >::type theta(thetaSEXP);
    Rcpp::traits::input_parameter< int >::type updateZ(updateZSEXP);
    Rcpp::traits::input_parameter< double >::type eps(epsSEXP);
    Rcpp::traits::input_parameter< int& >::type nsim(nsimSEXP);
    Rcpp::traits::input_parameter< int& >::type by(bySEXP);
    Rcpp::traits::input_parameter< int& >::type burnin(burninSEXP);
    Rcpp::traits::input_parameter< double& >::type tol(tolSEXP);
    Rcpp::traits::input_parameter< Rcpp::Nullable<Rcpp::NumericMatrix> >::type G(GSEXP);
    Rcpp::traits::input_parameter< Rcpp::Nullable<Rcpp::List> >::type oldpars(oldparsSEXP);
    Rcpp::traits::input_parameter< Rcpp::Nullable<Rcpp::NumericMatrix> >::type H(HSEXP);
    rcpp_result_gen = Rcpp::wrap(GibbsRFLSMYeoJohnsonZcpp(Y, q, A, a, b, alpha, beta, theta1, theta2, xi2, method, bound0, boundqplus1, updateYJ, theta, updateZ, eps, nsim, by, burnin, tol, G, oldpars, H));
    return rcpp_result_gen;
END_RCPP
}
// updateZt
arma::mat updateZt(arma::colvec Y, arma::colvec Z, arma::mat Phi, arma::mat Mu, double sigma2, double theta, int t, int leftcensoring, int rounding, int burnin, double tol);
RcppExport SEXP _BayesianLASSOMonitoring_updateZt(SEXP YSEXP, SEXP ZSEXP, SEXP PhiSEXP, SEXP MuSEXP, SEXP sigma2SEXP, SEXP thetaSEXP, SEXP tSEXP, SEXP leftcensoringSEXP, SEXP roundingSEXP, SEXP burninSEXP, SEXP tolSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::colvec >::type Y(YSEXP);
    Rcpp::traits::input_parameter< arma::colvec >::type Z(ZSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Phi(PhiSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Mu(MuSEXP);
    Rcpp::traits::input_parameter< double >::type sigma2(sigma2SEXP);
    Rcpp::traits::input_parameter< double >::type theta(thetaSEXP);
    Rcpp::traits::input_parameter< int >::type t(tSEXP);
    Rcpp::traits::input_parameter< int >::type leftcensoring(leftcensoringSEXP);
    Rcpp::traits::input_parameter< int >::type rounding(roundingSEXP);
    Rcpp::traits::input_parameter< int >::type burnin(burninSEXP);
    Rcpp::traits::input_parameter< double >::type tol(tolSEXP);
    rcpp_result_gen = Rcpp::wrap(updateZt(Y, Z, Phi, Mu, sigma2, theta, t, leftcensoring, rounding, burnin, tol));
    return rcpp_result_gen;
END_RCPP
}
// updateZtMD
arma::mat updateZtMD(arma::colvec Y, arma::colvec Z, arma::mat Phi, arma::mat Mu, double sigma2, double theta, int t, arma::colvec adjZ, arma::colvec Zlb, arma::colvec Zub, int burnin, double tol);
RcppExport SEXP _BayesianLASSOMonitoring_updateZtMD(SEXP YSEXP, SEXP ZSEXP, SEXP PhiSEXP, SEXP MuSEXP, SEXP sigma2SEXP, SEXP thetaSEXP, SEXP tSEXP, SEXP adjZSEXP, SEXP ZlbSEXP, SEXP ZubSEXP, SEXP burninSEXP, SEXP tolSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::colvec >::type Y(YSEXP);
    Rcpp::traits::input_parameter< arma::colvec >::type Z(ZSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Phi(PhiSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Mu(MuSEXP);
    Rcpp::traits::input_parameter< double >::type sigma2(sigma2SEXP);
    Rcpp::traits::input_parameter< double >::type theta(thetaSEXP);
    Rcpp::traits::input_parameter< int >::type t(tSEXP);
    Rcpp::traits::input_parameter< arma::colvec >::type adjZ(adjZSEXP);
    Rcpp::traits::input_parameter< arma::colvec >::type Zlb(ZlbSEXP);
    Rcpp::traits::input_parameter< arma::colvec >::type Zub(ZubSEXP);
    Rcpp::traits::input_parameter< int >::type burnin(burninSEXP);
    Rcpp::traits::input_parameter< double >::type tol(tolSEXP);
    rcpp_result_gen = Rcpp::wrap(updateZtMD(Y, Z, Phi, Mu, sigma2, theta, t, adjZ, Zlb, Zub, burnin, tol));
    return rcpp_result_gen;
END_RCPP
}
// updateZZ
arma::mat updateZZ(arma::colvec Y, arma::colvec Z, arma::mat Phi, arma::mat Mu, double sigma2, double theta, int leftcensoring, int rounding, int burnin, int nsim, double tol);
RcppExport SEXP _BayesianLASSOMonitoring_updateZZ(SEXP YSEXP, SEXP ZSEXP, SEXP PhiSEXP, SEXP MuSEXP, SEXP sigma2SEXP, SEXP thetaSEXP, SEXP leftcensoringSEXP, SEXP roundingSEXP, SEXP burninSEXP, SEXP nsimSEXP, SEXP tolSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::colvec >::type Y(YSEXP);
    Rcpp::traits::input_parameter< arma::colvec >::type Z(ZSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Phi(PhiSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Mu(MuSEXP);
    Rcpp::traits::input_parameter< double >::type sigma2(sigma2SEXP);
    Rcpp::traits::input_parameter< double >::type theta(thetaSEXP);
    Rcpp::traits::input_parameter< int >::type leftcensoring(leftcensoringSEXP);
    Rcpp::traits::input_parameter< int >::type rounding(roundingSEXP);
    Rcpp::traits::input_parameter< int >::type burnin(burninSEXP);
    Rcpp::traits::input_parameter< int >::type nsim(nsimSEXP);
    Rcpp::traits::input_parameter< double >::type tol(tolSEXP);
    rcpp_result_gen = Rcpp::wrap(updateZZ(Y, Z, Phi, Mu, sigma2, theta, leftcensoring, rounding, burnin, nsim, tol));
    return rcpp_result_gen;
END_RCPP
}
// updateZZMD
arma::mat updateZZMD(arma::colvec Y, arma::colvec Z, arma::mat Phi, arma::mat Mu, double sigma2, double theta, arma::colvec adjZ, arma::colvec Zlb, arma::colvec Zub, int burnin, int nsim, double tol);
RcppExport SEXP _BayesianLASSOMonitoring_updateZZMD(SEXP YSEXP, SEXP ZSEXP, SEXP PhiSEXP, SEXP MuSEXP, SEXP sigma2SEXP, SEXP thetaSEXP, SEXP adjZSEXP, SEXP ZlbSEXP, SEXP ZubSEXP, SEXP burninSEXP, SEXP nsimSEXP, SEXP tolSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::colvec >::type Y(YSEXP);
    Rcpp::traits::input_parameter< arma::colvec >::type Z(ZSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Phi(PhiSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Mu(MuSEXP);
    Rcpp::traits::input_parameter< double >::type sigma2(sigma2SEXP);
    Rcpp::traits::input_parameter< double >::type theta(thetaSEXP);
    Rcpp::traits::input_parameter< arma::colvec >::type adjZ(adjZSEXP);
    Rcpp::traits::input_parameter< arma::colvec >::type Zlb(ZlbSEXP);
    Rcpp::traits::input_parameter< arma::colvec >::type Zub(ZubSEXP);
    Rcpp::traits::input_parameter< int >::type burnin(burninSEXP);
    Rcpp::traits::input_parameter< int >::type nsim(nsimSEXP);
    Rcpp::traits::input_parameter< double >::type tol(tolSEXP);
    rcpp_result_gen = Rcpp::wrap(updateZZMD(Y, Z, Phi, Mu, sigma2, theta, adjZ, Zlb, Zub, burnin, nsim, tol));
    return rcpp_result_gen;
END_RCPP
}
// updateZ0
arma::mat updateZ0(arma::colvec Y, arma::colvec Z, arma::mat Phi, arma::mat Mu, double sigma2, double theta, int leftcensoring, int rounding, int burnin, int nsim, double tol);
RcppExport SEXP _BayesianLASSOMonitoring_updateZ0(SEXP YSEXP, SEXP ZSEXP, SEXP PhiSEXP, SEXP MuSEXP, SEXP sigma2SEXP, SEXP thetaSEXP, SEXP leftcensoringSEXP, SEXP roundingSEXP, SEXP burninSEXP, SEXP nsimSEXP, SEXP tolSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::colvec >::type Y(YSEXP);
    Rcpp::traits::input_parameter< arma::colvec >::type Z(ZSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Phi(PhiSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Mu(MuSEXP);
    Rcpp::traits::input_parameter< double >::type sigma2(sigma2SEXP);
    Rcpp::traits::input_parameter< double >::type theta(thetaSEXP);
    Rcpp::traits::input_parameter< int >::type leftcensoring(leftcensoringSEXP);
    Rcpp::traits::input_parameter< int >::type rounding(roundingSEXP);
    Rcpp::traits::input_parameter< int >::type burnin(burninSEXP);
    Rcpp::traits::input_parameter< int >::type nsim(nsimSEXP);
    Rcpp::traits::input_parameter< double >::type tol(tolSEXP);
    rcpp_result_gen = Rcpp::wrap(updateZ0(Y, Z, Phi, Mu, sigma2, theta, leftcensoring, rounding, burnin, nsim, tol));
    return rcpp_result_gen;
END_RCPP
}
// GibbsRFLSMYeoJohnsonZcpp1
Rcpp::List GibbsRFLSMYeoJohnsonZcpp1(arma::colvec& Y, int& q, arma::mat& A, double& a, double& b, double& alpha, double& beta, double& theta1, double& theta2, double& xi2, Rcpp::String& method, int monophi, double& bound0, double& boundqplus1, int updateYJ, double& theta, int leftcensoring, int rounding, double eps, int& nsim, int& by, int& burnin, double& tol, Rcpp::Nullable<Rcpp::NumericMatrix> G, Rcpp::Nullable<Rcpp::List> oldpars, Rcpp::Nullable<Rcpp::NumericMatrix> H);
RcppExport SEXP _BayesianLASSOMonitoring_GibbsRFLSMYeoJohnsonZcpp1(SEXP YSEXP, SEXP qSEXP, SEXP ASEXP, SEXP aSEXP, SEXP bSEXP, SEXP alphaSEXP, SEXP betaSEXP, SEXP theta1SEXP, SEXP theta2SEXP, SEXP xi2SEXP, SEXP methodSEXP, SEXP monophiSEXP, SEXP bound0SEXP, SEXP boundqplus1SEXP, SEXP updateYJSEXP, SEXP thetaSEXP, SEXP leftcensoringSEXP, SEXP roundingSEXP, SEXP epsSEXP, SEXP nsimSEXP, SEXP bySEXP, SEXP burninSEXP, SEXP tolSEXP, SEXP GSEXP, SEXP oldparsSEXP, SEXP HSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::colvec& >::type Y(YSEXP);
    Rcpp::traits::input_parameter< int& >::type q(qSEXP);
    Rcpp::traits::input_parameter< arma::mat& >::type A(ASEXP);
    Rcpp::traits::input_parameter< double& >::type a(aSEXP);
    Rcpp::traits::input_parameter< double& >::type b(bSEXP);
    Rcpp::traits::input_parameter< double& >::type alpha(alphaSEXP);
    Rcpp::traits::input_parameter< double& >::type beta(betaSEXP);
    Rcpp::traits::input_parameter< double& >::type theta1(theta1SEXP);
    Rcpp::traits::input_parameter< double& >::type theta2(theta2SEXP);
    Rcpp::traits::input_parameter< double& >::type xi2(xi2SEXP);
    Rcpp::traits::input_parameter< Rcpp::String& >::type method(methodSEXP);
    Rcpp::traits::input_parameter< int >::type monophi(monophiSEXP);
    Rcpp::traits::input_parameter< double& >::type bound0(bound0SEXP);
    Rcpp::traits::input_parameter< double& >::type boundqplus1(boundqplus1SEXP);
    Rcpp::traits::input_parameter< int >::type updateYJ(updateYJSEXP);
    Rcpp::traits::input_parameter< double& >::type theta(thetaSEXP);
    Rcpp::traits::input_parameter< int >::type leftcensoring(leftcensoringSEXP);
    Rcpp::traits::input_parameter< int >::type rounding(roundingSEXP);
    Rcpp::traits::input_parameter< double >::type eps(epsSEXP);
    Rcpp::traits::input_parameter< int& >::type nsim(nsimSEXP);
    Rcpp::traits::input_parameter< int& >::type by(bySEXP);
    Rcpp::traits::input_parameter< int& >::type burnin(burninSEXP);
    Rcpp::traits::input_parameter< double& >::type tol(tolSEXP);
    Rcpp::traits::input_parameter< Rcpp::Nullable<Rcpp::NumericMatrix> >::type G(GSEXP);
    Rcpp::traits::input_parameter< Rcpp::Nullable<Rcpp::List> >::type oldpars(oldparsSEXP);
    Rcpp::traits::input_parameter< Rcpp::Nullable<Rcpp::NumericMatrix> >::type H(HSEXP);
    rcpp_result_gen = Rcpp::wrap(GibbsRFLSMYeoJohnsonZcpp1(Y, q, A, a, b, alpha, beta, theta1, theta2, xi2, method, monophi, bound0, boundqplus1, updateYJ, theta, leftcensoring, rounding, eps, nsim, by, burnin, tol, G, oldpars, H));
    return rcpp_result_gen;
END_RCPP
}
// updateZSim
arma::mat updateZSim(arma::colvec Y, arma::colvec oldZ, arma::mat Phi, arma::mat Mu, double sigma2, double theta, double eps, int leftcensoring, int rounding);
RcppExport SEXP _BayesianLASSOMonitoring_updateZSim(SEXP YSEXP, SEXP oldZSEXP, SEXP PhiSEXP, SEXP MuSEXP, SEXP sigma2SEXP, SEXP thetaSEXP, SEXP epsSEXP, SEXP leftcensoringSEXP, SEXP roundingSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::colvec >::type Y(YSEXP);
    Rcpp::traits::input_parameter< arma::colvec >::type oldZ(oldZSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Phi(PhiSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Mu(MuSEXP);
    Rcpp::traits::input_parameter< double >::type sigma2(sigma2SEXP);
    Rcpp::traits::input_parameter< double >::type theta(thetaSEXP);
    Rcpp::traits::input_parameter< double >::type eps(epsSEXP);
    Rcpp::traits::input_parameter< int >::type leftcensoring(leftcensoringSEXP);
    Rcpp::traits::input_parameter< int >::type rounding(roundingSEXP);
    rcpp_result_gen = Rcpp::wrap(updateZSim(Y, oldZ, Phi, Mu, sigma2, theta, eps, leftcensoring, rounding));
    return rcpp_result_gen;
END_RCPP
}
// updateZSimMD
arma::mat updateZSimMD(arma::colvec Y, arma::colvec oldZ, arma::mat Phi, arma::mat Mu, double sigma2, double theta, double eps, arma::colvec adjZ, arma::colvec Zlb, arma::colvec Zub);
RcppExport SEXP _BayesianLASSOMonitoring_updateZSimMD(SEXP YSEXP, SEXP oldZSEXP, SEXP PhiSEXP, SEXP MuSEXP, SEXP sigma2SEXP, SEXP thetaSEXP, SEXP epsSEXP, SEXP adjZSEXP, SEXP ZlbSEXP, SEXP ZubSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::colvec >::type Y(YSEXP);
    Rcpp::traits::input_parameter< arma::colvec >::type oldZ(oldZSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Phi(PhiSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Mu(MuSEXP);
    Rcpp::traits::input_parameter< double >::type sigma2(sigma2SEXP);
    Rcpp::traits::input_parameter< double >::type theta(thetaSEXP);
    Rcpp::traits::input_parameter< double >::type eps(epsSEXP);
    Rcpp::traits::input_parameter< arma::colvec >::type adjZ(adjZSEXP);
    Rcpp::traits::input_parameter< arma::colvec >::type Zlb(ZlbSEXP);
    Rcpp::traits::input_parameter< arma::colvec >::type Zub(ZubSEXP);
    rcpp_result_gen = Rcpp::wrap(updateZSimMD(Y, oldZ, Phi, Mu, sigma2, theta, eps, adjZ, Zlb, Zub));
    return rcpp_result_gen;
END_RCPP
}
// GibbsRFLSMXUpdatecpp
Rcpp::List GibbsRFLSMXUpdatecpp(arma::colvec Y, int q, arma::mat A, double a, double b, double alpha, double beta, double theta1, double theta2, double xi2, Rcpp::String method, int monophi, double bound0, double boundqplus1, int nsim, int by, int burnin, double tol, Rcpp::Nullable<Rcpp::NumericMatrix> G, Rcpp::Nullable<Rcpp::List> oldpars, Rcpp::Nullable<Rcpp::NumericMatrix> X, Rcpp::Nullable<Rcpp::NumericMatrix> H);
RcppExport SEXP _BayesianLASSOMonitoring_GibbsRFLSMXUpdatecpp(SEXP YSEXP, SEXP qSEXP, SEXP ASEXP, SEXP aSEXP, SEXP bSEXP, SEXP alphaSEXP, SEXP betaSEXP, SEXP theta1SEXP, SEXP theta2SEXP, SEXP xi2SEXP, SEXP methodSEXP, SEXP monophiSEXP, SEXP bound0SEXP, SEXP boundqplus1SEXP, SEXP nsimSEXP, SEXP bySEXP, SEXP burninSEXP, SEXP tolSEXP, SEXP GSEXP, SEXP oldparsSEXP, SEXP XSEXP, SEXP HSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::colvec >::type Y(YSEXP);
    Rcpp::traits::input_parameter< int >::type q(qSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type A(ASEXP);
    Rcpp::traits::input_parameter< double >::type a(aSEXP);
    Rcpp::traits::input_parameter< double >::type b(bSEXP);
    Rcpp::traits::input_parameter< double >::type alpha(alphaSEXP);
    Rcpp::traits::input_parameter< double >::type beta(betaSEXP);
    Rcpp::traits::input_parameter< double >::type theta1(theta1SEXP);
    Rcpp::traits::input_parameter< double >::type theta2(theta2SEXP);
    Rcpp::traits::input_parameter< double >::type xi2(xi2SEXP);
    Rcpp::traits::input_parameter< Rcpp::String >::type method(methodSEXP);
    Rcpp::traits::input_parameter< int >::type monophi(monophiSEXP);
    Rcpp::traits::input_parameter< double >::type bound0(bound0SEXP);
    Rcpp::traits::input_parameter< double >::type boundqplus1(boundqplus1SEXP);
    Rcpp::traits::input_parameter< int >::type nsim(nsimSEXP);
    Rcpp::traits::input_parameter< int >::type by(bySEXP);
    Rcpp::traits::input_parameter< int >::type burnin(burninSEXP);
    Rcpp::traits::input_parameter< double >::type tol(tolSEXP);
    Rcpp::traits::input_parameter< Rcpp::Nullable<Rcpp::NumericMatrix> >::type G(GSEXP);
    Rcpp::traits::input_parameter< Rcpp::Nullable<Rcpp::List> >::type oldpars(oldparsSEXP);
    Rcpp::traits::input_parameter< Rcpp::Nullable<Rcpp::NumericMatrix> >::type X(XSEXP);
    Rcpp::traits::input_parameter< Rcpp::Nullable<Rcpp::NumericMatrix> >::type H(HSEXP);
    rcpp_result_gen = Rcpp::wrap(GibbsRFLSMXUpdatecpp(Y, q, A, a, b, alpha, beta, theta1, theta2, xi2, method, monophi, bound0, boundqplus1, nsim, by, burnin, tol, G, oldpars, X, H));
    return rcpp_result_gen;
END_RCPP
}
// GibbsRFLSMXYJZcpp
Rcpp::List GibbsRFLSMXYJZcpp(arma::colvec& Y, int& q, arma::mat& A, double& a, double& b, double& alpha, double& beta, double& theta1, double& theta2, double& xi2, Rcpp::String& method, int monophi, double& bound0, double& boundqplus1, int updateYJ, double& theta, int leftcensoring, int rounding, double eps, arma::colvec adjZ, arma::colvec Zlb, arma::colvec Zub, int& nsim, int& by, int& burnin, double& tol, Rcpp::Nullable<Rcpp::NumericMatrix> G, Rcpp::Nullable<Rcpp::List> oldpars, Rcpp::Nullable<Rcpp::NumericMatrix> X, Rcpp::Nullable<Rcpp::NumericMatrix> H);
RcppExport SEXP _BayesianLASSOMonitoring_GibbsRFLSMXYJZcpp(SEXP YSEXP, SEXP qSEXP, SEXP ASEXP, SEXP aSEXP, SEXP bSEXP, SEXP alphaSEXP, SEXP betaSEXP, SEXP theta1SEXP, SEXP theta2SEXP, SEXP xi2SEXP, SEXP methodSEXP, SEXP monophiSEXP, SEXP bound0SEXP, SEXP boundqplus1SEXP, SEXP updateYJSEXP, SEXP thetaSEXP, SEXP leftcensoringSEXP, SEXP roundingSEXP, SEXP epsSEXP, SEXP adjZSEXP, SEXP ZlbSEXP, SEXP ZubSEXP, SEXP nsimSEXP, SEXP bySEXP, SEXP burninSEXP, SEXP tolSEXP, SEXP GSEXP, SEXP oldparsSEXP, SEXP XSEXP, SEXP HSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::colvec& >::type Y(YSEXP);
    Rcpp::traits::input_parameter< int& >::type q(qSEXP);
    Rcpp::traits::input_parameter< arma::mat& >::type A(ASEXP);
    Rcpp::traits::input_parameter< double& >::type a(aSEXP);
    Rcpp::traits::input_parameter< double& >::type b(bSEXP);
    Rcpp::traits::input_parameter< double& >::type alpha(alphaSEXP);
    Rcpp::traits::input_parameter< double& >::type beta(betaSEXP);
    Rcpp::traits::input_parameter< double& >::type theta1(theta1SEXP);
    Rcpp::traits::input_parameter< double& >::type theta2(theta2SEXP);
    Rcpp::traits::input_parameter< double& >::type xi2(xi2SEXP);
    Rcpp::traits::input_parameter< Rcpp::String& >::type method(methodSEXP);
    Rcpp::traits::input_parameter< int >::type monophi(monophiSEXP);
    Rcpp::traits::input_parameter< double& >::type bound0(bound0SEXP);
    Rcpp::traits::input_parameter< double& >::type boundqplus1(boundqplus1SEXP);
    Rcpp::traits::input_parameter< int >::type updateYJ(updateYJSEXP);
    Rcpp::traits::input_parameter< double& >::type theta(thetaSEXP);
    Rcpp::traits::input_parameter< int >::type leftcensoring(leftcensoringSEXP);
    Rcpp::traits::input_parameter< int >::type rounding(roundingSEXP);
    Rcpp::traits::input_parameter< double >::type eps(epsSEXP);
    Rcpp::traits::input_parameter< arma::colvec >::type adjZ(adjZSEXP);
    Rcpp::traits::input_parameter< arma::colvec >::type Zlb(ZlbSEXP);
    Rcpp::traits::input_parameter< arma::colvec >::type Zub(ZubSEXP);
    Rcpp::traits::input_parameter< int& >::type nsim(nsimSEXP);
    Rcpp::traits::input_parameter< int& >::type by(bySEXP);
    Rcpp::traits::input_parameter< int& >::type burnin(burninSEXP);
    Rcpp::traits::input_parameter< double& >::type tol(tolSEXP);
    Rcpp::traits::input_parameter< Rcpp::Nullable<Rcpp::NumericMatrix> >::type G(GSEXP);
    Rcpp::traits::input_parameter< Rcpp::Nullable<Rcpp::List> >::type oldpars(oldparsSEXP);
    Rcpp::traits::input_parameter< Rcpp::Nullable<Rcpp::NumericMatrix> >::type X(XSEXP);
    Rcpp::traits::input_parameter< Rcpp::Nullable<Rcpp::NumericMatrix> >::type H(HSEXP);
    rcpp_result_gen = Rcpp::wrap(GibbsRFLSMXYJZcpp(Y, q, A, a, b, alpha, beta, theta1, theta2, xi2, method, monophi, bound0, boundqplus1, updateYJ, theta, leftcensoring, rounding, eps, adjZ, Zlb, Zub, nsim, by, burnin, tol, G, oldpars, X, H));
    return rcpp_result_gen;
END_RCPP
}
// GibbsRFLSMXYJZcpp1
Rcpp::List GibbsRFLSMXYJZcpp1(arma::colvec& Y, int& q, arma::mat& A, double& a, double& b, double& alpha, double& beta, double& theta1, double& theta2, double& xi2, Rcpp::String& method, int monophi, double& bound0, double& boundqplus1, int updateYJ, double& theta, int leftcensoring, int rounding, double eps, int& nsim, int& by, int& burnin, double& tol, Rcpp::Nullable<Rcpp::NumericMatrix> G, Rcpp::Nullable<Rcpp::List> oldpars, Rcpp::Nullable<Rcpp::NumericMatrix> X, Rcpp::Nullable<Rcpp::NumericMatrix> H);
RcppExport SEXP _BayesianLASSOMonitoring_GibbsRFLSMXYJZcpp1(SEXP YSEXP, SEXP qSEXP, SEXP ASEXP, SEXP aSEXP, SEXP bSEXP, SEXP alphaSEXP, SEXP betaSEXP, SEXP theta1SEXP, SEXP theta2SEXP, SEXP xi2SEXP, SEXP methodSEXP, SEXP monophiSEXP, SEXP bound0SEXP, SEXP boundqplus1SEXP, SEXP updateYJSEXP, SEXP thetaSEXP, SEXP leftcensoringSEXP, SEXP roundingSEXP, SEXP epsSEXP, SEXP nsimSEXP, SEXP bySEXP, SEXP burninSEXP, SEXP tolSEXP, SEXP GSEXP, SEXP oldparsSEXP, SEXP XSEXP, SEXP HSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::colvec& >::type Y(YSEXP);
    Rcpp::traits::input_parameter< int& >::type q(qSEXP);
    Rcpp::traits::input_parameter< arma::mat& >::type A(ASEXP);
    Rcpp::traits::input_parameter< double& >::type a(aSEXP);
    Rcpp::traits::input_parameter< double& >::type b(bSEXP);
    Rcpp::traits::input_parameter< double& >::type alpha(alphaSEXP);
    Rcpp::traits::input_parameter< double& >::type beta(betaSEXP);
    Rcpp::traits::input_parameter< double& >::type theta1(theta1SEXP);
    Rcpp::traits::input_parameter< double& >::type theta2(theta2SEXP);
    Rcpp::traits::input_parameter< double& >::type xi2(xi2SEXP);
    Rcpp::traits::input_parameter< Rcpp::String& >::type method(methodSEXP);
    Rcpp::traits::input_parameter< int >::type monophi(monophiSEXP);
    Rcpp::traits::input_parameter< double& >::type bound0(bound0SEXP);
    Rcpp::traits::input_parameter< double& >::type boundqplus1(boundqplus1SEXP);
    Rcpp::traits::input_parameter< int >::type updateYJ(updateYJSEXP);
    Rcpp::traits::input_parameter< double& >::type theta(thetaSEXP);
    Rcpp::traits::input_parameter< int >::type leftcensoring(leftcensoringSEXP);
    Rcpp::traits::input_parameter< int >::type rounding(roundingSEXP);
    Rcpp::traits::input_parameter< double >::type eps(epsSEXP);
    Rcpp::traits::input_parameter< int& >::type nsim(nsimSEXP);
    Rcpp::traits::input_parameter< int& >::type by(bySEXP);
    Rcpp::traits::input_parameter< int& >::type burnin(burninSEXP);
    Rcpp::traits::input_parameter< double& >::type tol(tolSEXP);
    Rcpp::traits::input_parameter< Rcpp::Nullable<Rcpp::NumericMatrix> >::type G(GSEXP);
    Rcpp::traits::input_parameter< Rcpp::Nullable<Rcpp::List> >::type oldpars(oldparsSEXP);
    Rcpp::traits::input_parameter< Rcpp::Nullable<Rcpp::NumericMatrix> >::type X(XSEXP);
    Rcpp::traits::input_parameter< Rcpp::Nullable<Rcpp::NumericMatrix> >::type H(HSEXP);
    rcpp_result_gen = Rcpp::wrap(GibbsRFLSMXYJZcpp1(Y, q, A, a, b, alpha, beta, theta1, theta2, xi2, method, monophi, bound0, boundqplus1, updateYJ, theta, leftcensoring, rounding, eps, nsim, by, burnin, tol, G, oldpars, X, H));
    return rcpp_result_gen;
END_RCPP
}
// getfityj
arma::colvec getfityj(arma::colvec Yyj, arma::mat Phi, arma::mat Mu, double eps);
RcppExport SEXP _BayesianLASSOMonitoring_getfityj(SEXP YyjSEXP, SEXP PhiSEXP, SEXP MuSEXP, SEXP epsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::colvec >::type Yyj(YyjSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Phi(PhiSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Mu(MuSEXP);
    Rcpp::traits::input_parameter< double >::type eps(epsSEXP);
    rcpp_result_gen = Rcpp::wrap(getfityj(Yyj, Phi, Mu, eps));
    return rcpp_result_gen;
END_RCPP
}
// getfit
arma::colvec getfit(arma::colvec Yyj, arma::mat Phi, arma::mat Mu, double theta, double eps);
RcppExport SEXP _BayesianLASSOMonitoring_getfit(SEXP YyjSEXP, SEXP PhiSEXP, SEXP MuSEXP, SEXP thetaSEXP, SEXP epsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::colvec >::type Yyj(YyjSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Phi(PhiSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Mu(MuSEXP);
    Rcpp::traits::input_parameter< double >::type theta(thetaSEXP);
    Rcpp::traits::input_parameter< double >::type eps(epsSEXP);
    rcpp_result_gen = Rcpp::wrap(getfit(Yyj, Phi, Mu, theta, eps));
    return rcpp_result_gen;
END_RCPP
}
// simYyjph1
arma::colvec simYyjph1(arma::colvec Yyj, arma::mat Phi, arma::mat Mu, double sigma2);
RcppExport SEXP _BayesianLASSOMonitoring_simYyjph1(SEXP YyjSEXP, SEXP PhiSEXP, SEXP MuSEXP, SEXP sigma2SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::colvec >::type Yyj(YyjSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Phi(PhiSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Mu(MuSEXP);
    Rcpp::traits::input_parameter< double >::type sigma2(sigma2SEXP);
    rcpp_result_gen = Rcpp::wrap(simYyjph1(Yyj, Phi, Mu, sigma2));
    return rcpp_result_gen;
END_RCPP
}
// simYph1
arma::colvec simYph1(arma::colvec Yyj, arma::mat Phi, arma::mat Mu, double sigma2, double theta, double eps);
RcppExport SEXP _BayesianLASSOMonitoring_simYph1(SEXP YyjSEXP, SEXP PhiSEXP, SEXP MuSEXP, SEXP sigma2SEXP, SEXP thetaSEXP, SEXP epsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::colvec >::type Yyj(YyjSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Phi(PhiSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Mu(MuSEXP);
    Rcpp::traits::input_parameter< double >::type sigma2(sigma2SEXP);
    Rcpp::traits::input_parameter< double >::type theta(thetaSEXP);
    Rcpp::traits::input_parameter< double >::type eps(epsSEXP);
    rcpp_result_gen = Rcpp::wrap(simYph1(Yyj, Phi, Mu, sigma2, theta, eps));
    return rcpp_result_gen;
END_RCPP
}
// simYyjph2
arma::colvec simYyjph2(int h, arma::colvec Yyjph1, arma::colvec Phi, arma::colvec Mu, double sigma2);
RcppExport SEXP _BayesianLASSOMonitoring_simYyjph2(SEXP hSEXP, SEXP Yyjph1SEXP, SEXP PhiSEXP, SEXP MuSEXP, SEXP sigma2SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type h(hSEXP);
    Rcpp::traits::input_parameter< arma::colvec >::type Yyjph1(Yyjph1SEXP);
    Rcpp::traits::input_parameter< arma::colvec >::type Phi(PhiSEXP);
    Rcpp::traits::input_parameter< arma::colvec >::type Mu(MuSEXP);
    Rcpp::traits::input_parameter< double >::type sigma2(sigma2SEXP);
    rcpp_result_gen = Rcpp::wrap(simYyjph2(h, Yyjph1, Phi, Mu, sigma2));
    return rcpp_result_gen;
END_RCPP
}
// simYph2
arma::colvec simYph2(int h, arma::colvec Y, arma::colvec Z, arma::colvec Phi, arma::colvec Mu, double sigma2, int updateYJ, double theta, int leftcensoring, int rounding, double eps, int backtr);
RcppExport SEXP _BayesianLASSOMonitoring_simYph2(SEXP hSEXP, SEXP YSEXP, SEXP ZSEXP, SEXP PhiSEXP, SEXP MuSEXP, SEXP sigma2SEXP, SEXP updateYJSEXP, SEXP thetaSEXP, SEXP leftcensoringSEXP, SEXP roundingSEXP, SEXP epsSEXP, SEXP backtrSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type h(hSEXP);
    Rcpp::traits::input_parameter< arma::colvec >::type Y(YSEXP);
    Rcpp::traits::input_parameter< arma::colvec >::type Z(ZSEXP);
    Rcpp::traits::input_parameter< arma::colvec >::type Phi(PhiSEXP);
    Rcpp::traits::input_parameter< arma::colvec >::type Mu(MuSEXP);
    Rcpp::traits::input_parameter< double >::type sigma2(sigma2SEXP);
    Rcpp::traits::input_parameter< int >::type updateYJ(updateYJSEXP);
    Rcpp::traits::input_parameter< double >::type theta(thetaSEXP);
    Rcpp::traits::input_parameter< int >::type leftcensoring(leftcensoringSEXP);
    Rcpp::traits::input_parameter< int >::type rounding(roundingSEXP);
    Rcpp::traits::input_parameter< double >::type eps(epsSEXP);
    Rcpp::traits::input_parameter< int >::type backtr(backtrSEXP);
    rcpp_result_gen = Rcpp::wrap(simYph2(h, Y, Z, Phi, Mu, sigma2, updateYJ, theta, leftcensoring, rounding, eps, backtr));
    return rcpp_result_gen;
END_RCPP
}
// simYyjph2NoY
arma::colvec simYyjph2NoY(int h, arma::colvec Yyjph1, arma::colvec Phi, arma::colvec Mu, double sigma2);
RcppExport SEXP _BayesianLASSOMonitoring_simYyjph2NoY(SEXP hSEXP, SEXP Yyjph1SEXP, SEXP PhiSEXP, SEXP MuSEXP, SEXP sigma2SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type h(hSEXP);
    Rcpp::traits::input_parameter< arma::colvec >::type Yyjph1(Yyjph1SEXP);
    Rcpp::traits::input_parameter< arma::colvec >::type Phi(PhiSEXP);
    Rcpp::traits::input_parameter< arma::colvec >::type Mu(MuSEXP);
    Rcpp::traits::input_parameter< double >::type sigma2(sigma2SEXP);
    rcpp_result_gen = Rcpp::wrap(simYyjph2NoY(h, Yyjph1, Phi, Mu, sigma2));
    return rcpp_result_gen;
END_RCPP
}
// simYph2NoY
arma::colvec simYph2NoY(int h, arma::colvec Y, arma::colvec Z, arma::colvec Phi, arma::colvec Mu, double sigma2, int updateYJ, double theta, int leftcensoring, int rounding, double eps, int backtr);
RcppExport SEXP _BayesianLASSOMonitoring_simYph2NoY(SEXP hSEXP, SEXP YSEXP, SEXP ZSEXP, SEXP PhiSEXP, SEXP MuSEXP, SEXP sigma2SEXP, SEXP updateYJSEXP, SEXP thetaSEXP, SEXP leftcensoringSEXP, SEXP roundingSEXP, SEXP epsSEXP, SEXP backtrSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type h(hSEXP);
    Rcpp::traits::input_parameter< arma::colvec >::type Y(YSEXP);
    Rcpp::traits::input_parameter< arma::colvec >::type Z(ZSEXP);
    Rcpp::traits::input_parameter< arma::colvec >::type Phi(PhiSEXP);
    Rcpp::traits::input_parameter< arma::colvec >::type Mu(MuSEXP);
    Rcpp::traits::input_parameter< double >::type sigma2(sigma2SEXP);
    Rcpp::traits::input_parameter< int >::type updateYJ(updateYJSEXP);
    Rcpp::traits::input_parameter< double >::type theta(thetaSEXP);
    Rcpp::traits::input_parameter< int >::type leftcensoring(leftcensoringSEXP);
    Rcpp::traits::input_parameter< int >::type rounding(roundingSEXP);
    Rcpp::traits::input_parameter< double >::type eps(epsSEXP);
    Rcpp::traits::input_parameter< int >::type backtr(backtrSEXP);
    rcpp_result_gen = Rcpp::wrap(simYph2NoY(h, Y, Z, Phi, Mu, sigma2, updateYJ, theta, leftcensoring, rounding, eps, backtr));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_BayesianLASSOMonitoring_getV", (DL_FUNC) &_BayesianLASSOMonitoring_getV, 2},
    {"_BayesianLASSOMonitoring_rtwosegnorm", (DL_FUNC) &_BayesianLASSOMonitoring_rtwosegnorm, 5},
    {"_BayesianLASSOMonitoring_getGMat", (DL_FUNC) &_BayesianLASSOMonitoring_getGMat, 2},
    {"_BayesianLASSOMonitoring_getPhiMat", (DL_FUNC) &_BayesianLASSOMonitoring_getPhiMat, 2},
    {"_BayesianLASSOMonitoring_getHMatMT", (DL_FUNC) &_BayesianLASSOMonitoring_getHMatMT, 2},
    {"_BayesianLASSOMonitoring_getHMatSustained", (DL_FUNC) &_BayesianLASSOMonitoring_getHMatSustained, 2},
    {"_BayesianLASSOMonitoring_getHMatIsolated", (DL_FUNC) &_BayesianLASSOMonitoring_getHMatIsolated, 2},
    {"_BayesianLASSOMonitoring_getHMatGradual", (DL_FUNC) &_BayesianLASSOMonitoring_getHMatGradual, 2},
    {"_BayesianLASSOMonitoring_getXSeasonalityFS", (DL_FUNC) &_BayesianLASSOMonitoring_getXSeasonalityFS, 3},
    {"_BayesianLASSOMonitoring_GibbsRFLSMcpp", (DL_FUNC) &_BayesianLASSOMonitoring_GibbsRFLSMcpp, 18},
    {"_BayesianLASSOMonitoring_GibbsRFLSMUpdatecpp", (DL_FUNC) &_BayesianLASSOMonitoring_GibbsRFLSMUpdatecpp, 21},
    {"_BayesianLASSOMonitoring_lhf", (DL_FUNC) &_BayesianLASSOMonitoring_lhf, 4},
    {"_BayesianLASSOMonitoring_boxcoxtr", (DL_FUNC) &_BayesianLASSOMonitoring_boxcoxtr, 2},
    {"_BayesianLASSOMonitoring_invboxcoxtr", (DL_FUNC) &_BayesianLASSOMonitoring_invboxcoxtr, 2},
    {"_BayesianLASSOMonitoring_invyeojohnsontr", (DL_FUNC) &_BayesianLASSOMonitoring_invyeojohnsontr, 3},
    {"_BayesianLASSOMonitoring_yeojohnsontr", (DL_FUNC) &_BayesianLASSOMonitoring_yeojohnsontr, 3},
    {"_BayesianLASSOMonitoring_lhBCf", (DL_FUNC) &_BayesianLASSOMonitoring_lhBCf, 5},
    {"_BayesianLASSOMonitoring_lhYJf", (DL_FUNC) &_BayesianLASSOMonitoring_lhYJf, 5},
    {"_BayesianLASSOMonitoring_llhYJf", (DL_FUNC) &_BayesianLASSOMonitoring_llhYJf, 6},
    {"_BayesianLASSOMonitoring_thetaBoxCoxMH", (DL_FUNC) &_BayesianLASSOMonitoring_thetaBoxCoxMH, 8},
    {"_BayesianLASSOMonitoring_thetaYeoJohnsonMH", (DL_FUNC) &_BayesianLASSOMonitoring_thetaYeoJohnsonMH, 8},
    {"_BayesianLASSOMonitoring_updatethetaYJMH", (DL_FUNC) &_BayesianLASSOMonitoring_updatethetaYJMH, 8},
    {"_BayesianLASSOMonitoring_updateKappaTheta", (DL_FUNC) &_BayesianLASSOMonitoring_updateKappaTheta, 9},
    {"_BayesianLASSOMonitoring_GibbsRFLSMBoxCoxcpp", (DL_FUNC) &_BayesianLASSOMonitoring_GibbsRFLSMBoxCoxcpp, 22},
    {"_BayesianLASSOMonitoring_rtrnorm", (DL_FUNC) &_BayesianLASSOMonitoring_rtrnorm, 5},
    {"_BayesianLASSOMonitoring_GibbsRFLSMYeoJohnsonZcpp", (DL_FUNC) &_BayesianLASSOMonitoring_GibbsRFLSMYeoJohnsonZcpp, 24},
    {"_BayesianLASSOMonitoring_updateZt", (DL_FUNC) &_BayesianLASSOMonitoring_updateZt, 11},
    {"_BayesianLASSOMonitoring_updateZtMD", (DL_FUNC) &_BayesianLASSOMonitoring_updateZtMD, 12},
    {"_BayesianLASSOMonitoring_updateZZ", (DL_FUNC) &_BayesianLASSOMonitoring_updateZZ, 11},
    {"_BayesianLASSOMonitoring_updateZZMD", (DL_FUNC) &_BayesianLASSOMonitoring_updateZZMD, 12},
    {"_BayesianLASSOMonitoring_updateZ0", (DL_FUNC) &_BayesianLASSOMonitoring_updateZ0, 11},
    {"_BayesianLASSOMonitoring_GibbsRFLSMYeoJohnsonZcpp1", (DL_FUNC) &_BayesianLASSOMonitoring_GibbsRFLSMYeoJohnsonZcpp1, 26},
    {"_BayesianLASSOMonitoring_updateZSim", (DL_FUNC) &_BayesianLASSOMonitoring_updateZSim, 9},
    {"_BayesianLASSOMonitoring_updateZSimMD", (DL_FUNC) &_BayesianLASSOMonitoring_updateZSimMD, 10},
    {"_BayesianLASSOMonitoring_GibbsRFLSMXUpdatecpp", (DL_FUNC) &_BayesianLASSOMonitoring_GibbsRFLSMXUpdatecpp, 22},
    {"_BayesianLASSOMonitoring_GibbsRFLSMXYJZcpp", (DL_FUNC) &_BayesianLASSOMonitoring_GibbsRFLSMXYJZcpp, 30},
    {"_BayesianLASSOMonitoring_GibbsRFLSMXYJZcpp1", (DL_FUNC) &_BayesianLASSOMonitoring_GibbsRFLSMXYJZcpp1, 27},
    {"_BayesianLASSOMonitoring_getfityj", (DL_FUNC) &_BayesianLASSOMonitoring_getfityj, 4},
    {"_BayesianLASSOMonitoring_getfit", (DL_FUNC) &_BayesianLASSOMonitoring_getfit, 5},
    {"_BayesianLASSOMonitoring_simYyjph1", (DL_FUNC) &_BayesianLASSOMonitoring_simYyjph1, 4},
    {"_BayesianLASSOMonitoring_simYph1", (DL_FUNC) &_BayesianLASSOMonitoring_simYph1, 6},
    {"_BayesianLASSOMonitoring_simYyjph2", (DL_FUNC) &_BayesianLASSOMonitoring_simYyjph2, 5},
    {"_BayesianLASSOMonitoring_simYph2", (DL_FUNC) &_BayesianLASSOMonitoring_simYph2, 12},
    {"_BayesianLASSOMonitoring_simYyjph2NoY", (DL_FUNC) &_BayesianLASSOMonitoring_simYyjph2NoY, 5},
    {"_BayesianLASSOMonitoring_simYph2NoY", (DL_FUNC) &_BayesianLASSOMonitoring_simYph2NoY, 12},
    {NULL, NULL, 0}
};

RcppExport void R_init_BayesianLASSOMonitoring(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
